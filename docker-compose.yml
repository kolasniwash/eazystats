version: "3.10.6"
services:
  pgdb:
    image: postgres:14
    restart: on-failure
    container_name: ${POSTGRES_CONTAINER}
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_SCHEMA}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${PG_CONTAINER_PORT}:${PG_HOST_PORT}"
    volumes:
      - ./:/eazystats/
      - ./data/backups/eazystats.dump:/docker-entrypoint-initdb.d/eazystats.dump
      - ./db/:/docker-entrypoint-initdb.d/db/
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres-data:/var/lib/postgresql/data

  backend:
    depends_on:
      - pgdb
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ${BACKEND_CONTAINER}
    env_file:
      - .env
    ports:
      - "${BACKEND_CONTAINER_PORT}:${BACKEND_HOST_PORT}"
    volumes:
      - ./backend:/app/backend

  frontend:
    depends_on:
      - backend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ${FRONTEND_CONTAINER}
    env_file:
      - .env
    ports:
      - "${FRONTEND_CONTAINER_PORT}:${FRONTEND_HOST_PORT}"
    volumes:
      - ./frontend:/app

volumes:
  postgres-data: