--
-- PostgreSQL database dump
--

-- Dumped from database version 14.9 (Debian 14.9-1.pgdg120+1)
-- Dumped by pg_dump version 14.9 (Debian 14.9-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: tablefunc; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS tablefunc WITH SCHEMA public;


--
-- Name: EXTENSION tablefunc; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION tablefunc IS 'functions that manipulate whole tables, including crosstab';


--
-- Name: events; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.events AS ENUM (
    'WCT Tallinn',
    'WCT Bern',
    'WCT Lodz',
    'Dolly Cup',
    'CE Espana',
    'Bonspeil Jaca',
    'Bonspeil Pirineos'
);


ALTER TYPE public.events OWNER TO postgres;

--
-- Name: shots; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.shots AS (
	four integer,
	three integer,
	two integer,
	one integer,
	zero integer,
	total integer
);


ALTER TYPE public.shots OWNER TO postgres;

--
-- Name: stats; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.stats AS (
	average real,
	shot_count integer,
	shot_total integer,
	in_count integer,
	in_total integer,
	out_count integer,
	out_total integer
);


ALTER TYPE public.stats OWNER TO postgres;

--
-- Name: games; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.games AS (
	performance public.stats,
	shot_counts public.shots
);


ALTER TYPE public.games OWNER TO postgres;

--
-- Name: linescore; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.linescore AS (
	end_num integer,
	home_score text,
	away_score text,
	scorer text,
	scored text,
	hammer text,
	steal boolean,
	take boolean,
	blank boolean
);


ALTER TYPE public.linescore OWNER TO postgres;

--
-- Name: players; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.players AS ENUM (
    'edu',
    'nico',
    'luis',
    'mikel',
    'sergio',
    'team'
);


ALTER TYPE public.players OWNER TO postgres;

--
-- Name: positions; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.positions AS ENUM (
    'lead',
    'second',
    'third',
    'fourth',
    'alternate',
    'team'
);


ALTER TYPE public.positions OWNER TO postgres;

--
-- Name: seasons; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.seasons AS ENUM (
    '2022/23',
    '2023/24',
    '2024/25',
    '2022-2023',
    '2023-2024'
);


ALTER TYPE public.seasons OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: game_details; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.game_details (
    game_id integer NOT NULL,
    event_name character varying(255),
    season character varying(255),
    date date,
    opponent character varying(255),
    reg_ends integer,
    tournament_round character varying(255)
);


ALTER TABLE public.game_details OWNER TO postgres;

--
-- Name: game_details_game_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.game_details_game_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.game_details_game_id_seq OWNER TO postgres;

--
-- Name: game_details_game_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.game_details_game_id_seq OWNED BY public.game_details.game_id;


--
-- Name: gamescores; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.gamescores (
    game_id integer NOT NULL,
    event_id integer,
    session_id integer,
    home_team text,
    away_team text,
    home_long_name text,
    away_long_name text,
    hammer text,
    home_lsd real,
    away_lsd real,
    home_score integer,
    away_score integer,
    total_ends integer,
    linescore public.linescore[]
);


ALTER TABLE public.gamescores OWNER TO postgres;

--
-- Name: gamescores_game_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.gamescores_game_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.gamescores_game_id_seq OWNER TO postgres;

--
-- Name: gamescores_game_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.gamescores_game_id_seq OWNED BY public.gamescores.game_id;


--
-- Name: player_lineup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.player_lineup (
    id integer NOT NULL,
    game_id integer,
    "position" character varying(255),
    player character varying(255)
);


ALTER TABLE public.player_lineup OWNER TO postgres;

--
-- Name: player_lineup_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.player_lineup_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.player_lineup_id_seq OWNER TO postgres;

--
-- Name: player_lineup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.player_lineup_id_seq OWNED BY public.player_lineup.id;


--
-- Name: shots_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shots_table (
    shot_id integer NOT NULL,
    game_id integer,
    end_num integer,
    throw_in_end integer,
    thrower_position character varying(255),
    shot_type character varying(255),
    turn character varying(255),
    score integer
);


ALTER TABLE public.shots_table OWNER TO postgres;

--
-- Name: shots_table_shot_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.shots_table_shot_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.shots_table_shot_id_seq OWNER TO postgres;

--
-- Name: shots_table_shot_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.shots_table_shot_id_seq OWNED BY public.shots_table.shot_id;


--
-- Name: statistics; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.statistics (
    game_id integer NOT NULL,
    "position" public.positions NOT NULL,
    player public.players NOT NULL,
    games public.games[],
    performance public.stats,
    shot_counts public.shots,
    event public.events,
    season public.seasons,
    played_game boolean
);


ALTER TABLE public.statistics OWNER TO postgres;

--
-- Name: wcf_events; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.wcf_events (
    event_id integer NOT NULL,
    event_name text,
    year integer,
    ends integer
);


ALTER TABLE public.wcf_events OWNER TO postgres;

--
-- Name: wcf_events_event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.wcf_events_event_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.wcf_events_event_id_seq OWNER TO postgres;

--
-- Name: wcf_events_event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.wcf_events_event_id_seq OWNED BY public.wcf_events.event_id;


--
-- Name: world_teams; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.world_teams (
    team_id integer NOT NULL,
    team_name text
);


ALTER TABLE public.world_teams OWNER TO postgres;

--
-- Name: world_teams_team_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.world_teams_team_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.world_teams_team_id_seq OWNER TO postgres;

--
-- Name: world_teams_team_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.world_teams_team_id_seq OWNED BY public.world_teams.team_id;


--
-- Name: game_details game_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.game_details ALTER COLUMN game_id SET DEFAULT nextval('public.game_details_game_id_seq'::regclass);


--
-- Name: gamescores game_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gamescores ALTER COLUMN game_id SET DEFAULT nextval('public.gamescores_game_id_seq'::regclass);


--
-- Name: player_lineup id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.player_lineup ALTER COLUMN id SET DEFAULT nextval('public.player_lineup_id_seq'::regclass);


--
-- Name: shots_table shot_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shots_table ALTER COLUMN shot_id SET DEFAULT nextval('public.shots_table_shot_id_seq'::regclass);


--
-- Name: wcf_events event_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.wcf_events ALTER COLUMN event_id SET DEFAULT nextval('public.wcf_events_event_id_seq'::regclass);


--
-- Name: world_teams team_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.world_teams ALTER COLUMN team_id SET DEFAULT nextval('public.world_teams_team_id_seq'::regclass);


--
-- Data for Name: game_details; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.game_details (game_id, event_name, season, date, opponent, reg_ends, tournament_round) FROM stdin;
1	WCT Bern	2022-2023	2023-10-27	Schnider	8	Round Robin
2	WCT Bern	2023-2024	2023-10-27	Muskawitz	8	Round Robin
3	WCT Bern	2023-2024	2023-10-28	Wildhaus	8	Round Robin
4	WCT Bern	2023-2024	2023-10-28	Wildhaus2	8	Round Robin
5	WCT Tallinn	2023/24	2023-09-28	Jakobson	8	Round Robin
6	WCT Tallinn	2023/24	2023-09-30	Landelius	8	Round Robin
7	WCT Tallinn	2023/24	2023-09-29	Schnider	8	Round Robin
8	WCT Tallinn	2023/24	2023-09-29	Genner	8	Round Robin
\.


--
-- Data for Name: gamescores; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.gamescores (game_id, event_id, session_id, home_team, away_team, home_long_name, away_long_name, hammer, home_lsd, away_lsd, home_score, away_score, total_ends, linescore) FROM stdin;
1	1	20	TUR	NOR	Türkiye	Norway	NOR	40.9	34.5	4	6	10	{"(0,0,2,NOR,2,NOR,f,t,f)","(1,0,0,\\"\\",\\"\\",TUR,f,f,t)","(2,3,0,TUR,3,TUR,f,t,f)","(3,0,0,\\"\\",\\"\\",NOR,f,f,t)","(4,0,1,NOR,1,NOR,f,t,f)","(5,0,0,\\"\\",\\"\\",TUR,f,f,t)","(6,0,0,\\"\\",\\"\\",TUR,f,f,t)","(7,1,0,TUR,1,TUR,f,t,f)","(8,0,2,NOR,2,NOR,f,t,f)","(9,0,1,NOR,1,TUR,t,f,f)"}
2	1	20	GER	JPN	Germany	Japan	GER	129.2	267.7	8	5	9	{"(0,1,0,GER,1,GER,f,t,f)","(1,0,1,JPN,1,JPN,f,t,f)","(2,2,0,GER,2,GER,f,t,f)","(3,0,1,JPN,1,JPN,f,t,f)","(4,2,0,GER,2,GER,f,t,f)","(5,0,2,JPN,2,JPN,f,t,f)","(6,3,0,GER,3,GER,f,t,f)","(7,0,0,\\"\\",\\"\\",JPN,f,f,t)","(8,0,1,JPN,1,JPN,f,t,f)"}
3	1	20	NZL	SCO	New Zealand	Scotland	NZL	57	202.7	4	10	9	{"(0,1,0,NZL,1,NZL,f,t,f)","(1,0,3,SCO,3,SCO,f,t,f)","(2,0,1,SCO,1,NZL,t,f,f)","(3,2,0,NZL,2,NZL,f,t,f)","(4,0,1,SCO,1,SCO,f,t,f)","(5,1,0,NZL,1,NZL,f,t,f)","(6,0,0,\\"\\",\\"\\",SCO,f,f,t)","(7,0,2,SCO,2,SCO,f,t,f)","(8,0,3,SCO,3,NZL,t,f,f)"}
4	1	20	SWE	CAN	Sweden	Canada	SWE	28.3	39.9	5	8	8	{"(0,2,0,SWE,2,SWE,f,t,f)","(1,0,1,CAN,1,CAN,f,t,f)","(2,0,0,\\"\\",\\"\\",SWE,f,f,t)","(3,1,0,SWE,1,SWE,f,t,f)","(4,0,4,CAN,4,CAN,f,t,f)","(5,1,0,SWE,1,SWE,f,t,f)","(6,0,3,CAN,3,CAN,f,t,f)","(7,1,0,SWE,1,SWE,f,t,f)"}
5	1	18	ITA	JPN	Italy	Japan	JPN	62.9	34.7	12	5	8	{"(0,0,1,JPN,1,JPN,f,t,f)","(1,4,0,ITA,4,ITA,f,t,f)","(2,0,1,JPN,1,JPN,f,t,f)","(3,3,0,ITA,3,ITA,f,t,f)","(4,0,1,JPN,1,JPN,f,t,f)","(5,2,0,ITA,2,ITA,f,t,f)","(6,0,2,JPN,2,JPN,f,t,f)","(7,3,0,ITA,3,ITA,f,t,f)"}
6	1	18	NOR	CZE	Norway	Czech Republic	NOR	37.1	125.6	8	6	9	{"(0,2,0,NOR,2,NOR,f,t,f)","(1,1,0,NOR,1,CZE,t,f,f)","(2,0,4,CZE,4,NOR,t,f,f)","(3,1,0,NOR,1,NOR,f,t,f)","(4,0,2,CZE,2,CZE,f,t,f)","(5,2,0,NOR,2,NOR,f,t,f)","(6,1,0,NOR,1,CZE,t,f,f)","(7,0,0,\\"\\",\\"\\",NOR,f,f,t)","(8,1,0,NOR,1,NOR,f,t,f)"}
7	1	18	CAN	TUR	Canada	Türkiye	CAN	78.9	200.9	9	5	8	{"(0,2,0,CAN,2,CAN,f,t,f)","(1,0,1,TUR,1,TUR,f,t,f)","(2,1,0,CAN,1,CAN,f,t,f)","(3,0,2,TUR,2,TUR,f,t,f)","(4,4,0,CAN,4,CAN,f,t,f)","(5,0,1,TUR,1,TUR,f,t,f)","(6,2,0,CAN,2,CAN,f,t,f)","(7,0,1,TUR,1,TUR,f,t,f)"}
8	1	18	USA	GER	United States	Germany	USA	80	119	12	4	8	{"(0,1,0,USA,1,USA,f,t,f)","(1,0,1,GER,1,GER,f,t,f)","(2,3,0,USA,3,USA,f,t,f)","(3,1,0,USA,1,GER,t,f,f)","(4,0,2,GER,2,USA,t,f,f)","(5,2,0,USA,2,USA,f,t,f)","(6,0,1,GER,1,GER,f,t,f)","(7,5,0,USA,5,USA,f,t,f)"}
9	1	19	SCO	CZE	Scotland	Czech Republic	SCO	29.1	174.2	9	3	8	{"(0,1,0,SCO,1,SCO,f,t,f)","(1,2,0,SCO,2,CZE,t,f,f)","(2,1,0,SCO,1,SCO,f,t,f)","(3,0,2,CZE,2,CZE,f,t,f)","(4,2,0,SCO,2,SCO,f,t,f)","(5,1,0,SCO,1,CZE,t,f,f)","(6,0,1,CZE,1,SCO,t,f,f)","(7,2,0,SCO,2,SCO,f,t,f)"}
10	1	19	NZL	USA	New Zealand	United States	NZL	68.4	233.8	3	8	8	{"(0,1,0,NZL,1,NZL,f,t,f)","(1,0,1,USA,1,USA,f,t,f)","(2,0,1,USA,1,NZL,t,f,f)","(3,1,0,NZL,1,NZL,f,t,f)","(4,0,1,USA,1,USA,f,t,f)","(5,1,0,NZL,1,NZL,f,t,f)","(6,0,3,USA,3,USA,f,t,f)","(7,0,2,USA,2,NZL,t,f,f)"}
11	1	19	SUI	SWE	Switzerland	Sweden	SUI	37	98.1	8	5	10	{"(0,1,0,SUI,1,SUI,f,t,f)","(1,0,1,SWE,1,SWE,f,t,f)","(2,1,0,SUI,1,SUI,f,t,f)","(3,0,1,SWE,1,SWE,f,t,f)","(4,1,0,SUI,1,SUI,f,t,f)","(5,0,2,SWE,2,SWE,f,t,f)","(6,0,0,\\"\\",\\"\\",SUI,f,f,t)","(7,0,1,SWE,1,SUI,t,f,f)","(8,3,0,SUI,3,SUI,f,t,f)","(9,2,0,SUI,2,SWE,t,f,f)"}
12	1	19	KOR	ITA	Korea	Italy	KOR	85.4	133.4	2	9	8	{"(0,0,0,\\"\\",\\"\\",KOR,f,f,t)","(1,1,0,KOR,1,KOR,f,t,f)","(2,0,3,ITA,3,ITA,f,t,f)","(3,1,0,KOR,1,KOR,f,t,f)","(4,0,2,ITA,2,ITA,f,t,f)","(5,0,0,\\"\\",\\"\\",KOR,f,f,t)","(6,0,2,ITA,2,KOR,t,f,f)","(7,0,2,ITA,2,KOR,t,f,f)"}
13	1	1	CAN	SUI	Canada	Switzerland	SUI	92.8	60.8	3	8	8	{"(0,0,2,SUI,2,SUI,f,t,f)","(1,1,0,CAN,1,CAN,f,t,f)","(2,0,2,SUI,2,SUI,f,t,f)","(3,0,1,SUI,1,CAN,t,f,f)","(4,0,2,SUI,2,CAN,t,f,f)","(5,0,0,\\"\\",\\"\\",CAN,f,f,t)","(6,2,0,CAN,2,CAN,f,t,f)","(7,0,1,SUI,1,SUI,f,t,f)"}
14	1	1	KOR	NZL	Korea	New Zealand	NZL	138.1	39.8	8	2	8	{"(0,0,0,\\"\\",\\"\\",NZL,f,f,t)","(1,0,1,NZL,1,NZL,f,t,f)","(2,1,0,KOR,1,KOR,f,t,f)","(3,1,0,KOR,1,NZL,t,f,f)","(4,1,0,KOR,1,KOR,f,t,f)","(5,0,1,NZL,1,NZL,f,t,f)","(6,2,0,KOR,2,KOR,f,t,f)","(7,3,0,KOR,3,NZL,t,f,f)"}
15	1	1	SWE	GER	Sweden	Germany	SWE	45.7	133.1	8	2	6	{"(0,4,0,SWE,4,SWE,f,t,f)","(1,0,1,GER,1,GER,f,t,f)","(2,2,0,SWE,2,SWE,f,t,f)","(3,1,0,SWE,1,GER,t,f,f)","(4,0,1,GER,1,SWE,t,f,f)","(5,1,0,SWE,1,SWE,f,t,f)"}
16	1	1	SCO	ITA	Scotland	Italy	ITA	137	28.4	7	4	10	{"(0,0,0,\\"\\",\\"\\",ITA,f,f,t)","(1,0,1,ITA,1,ITA,f,t,f)","(2,0,1,ITA,1,SCO,t,f,f)","(3,3,0,SCO,3,SCO,f,t,f)","(4,0,1,ITA,1,ITA,f,t,f)","(5,0,0,\\"\\",\\"\\",SCO,f,f,t)","(6,1,0,SCO,1,SCO,f,t,f)","(7,1,0,SCO,1,ITA,t,f,f)","(8,0,1,ITA,1,SCO,t,f,f)","(9,2,0,SCO,2,SCO,f,t,f)"}
17	1	3	NOR	KOR	Norway	Korea	NOR	26.5	100.7	6	2	8	{"(0,0,0,\\"\\",\\"\\",NOR,f,f,t)","(1,2,0,NOR,2,NOR,f,t,f)","(2,0,0,\\"\\",\\"\\",KOR,f,f,t)","(3,0,1,KOR,1,KOR,f,t,f)","(4,2,0,NOR,2,NOR,f,t,f)","(5,1,0,NOR,1,KOR,t,f,f)","(6,1,0,NOR,1,NOR,f,t,f)","(7,0,1,KOR,1,KOR,f,t,f)"}
18	1	3	TUR	SCO	Türkiye	Scotland	SCO	213.6	129.8	1	8	6	{"(0,0,3,SCO,3,SCO,f,t,f)","(1,0,1,SCO,1,TUR,t,f,f)","(2,0,2,SCO,2,TUR,t,f,f)","(3,0,2,SCO,2,TUR,t,f,f)","(4,0,0,\\"\\",\\"\\",TUR,f,f,t)","(5,1,0,TUR,1,TUR,f,t,f)"}
19	1	3	SUI	CZE	Switzerland	Czech Republic	CZE	31.3	10.5	7	4	9	{"(0,0,0,\\"\\",\\"\\",CZE,f,f,t)","(1,0,1,CZE,1,CZE,f,t,f)","(2,2,0,SUI,2,SUI,f,t,f)","(3,0,1,CZE,1,CZE,f,t,f)","(4,0,1,CZE,1,SUI,t,f,f)","(5,2,0,SUI,2,SUI,f,t,f)","(6,0,1,CZE,1,CZE,f,t,f)","(7,2,0,SUI,2,SUI,f,t,f)","(8,1,0,SUI,1,CZE,t,f,f)"}
20	1	3	USA	SWE	United States	Sweden	SWE	112.9	23	6	11	9	{"(0,0,2,SWE,2,SWE,f,t,f)","(1,0,0,\\"\\",\\"\\",USA,f,f,t)","(2,2,0,USA,2,USA,f,t,f)","(3,0,3,SWE,3,SWE,f,t,f)","(4,0,2,SWE,2,USA,t,f,f)","(5,2,0,USA,2,USA,f,t,f)","(6,0,2,SWE,2,SWE,f,t,f)","(7,2,0,USA,2,USA,f,t,f)","(8,0,2,SWE,2,SWE,f,t,f)"}
21	1	2	JPN	TUR	Japan	Türkiye	TUR	77.3	48	4	3	11	{"(0,0,0,\\"\\",\\"\\",TUR,f,f,t)","(1,0,1,TUR,1,TUR,f,t,f)","(2,0,0,\\"\\",\\"\\",JPN,f,f,t)","(3,0,0,\\"\\",\\"\\",JPN,f,f,t)","(4,1,0,JPN,1,JPN,f,t,f)","(5,0,1,TUR,1,TUR,f,t,f)","(6,1,0,JPN,1,JPN,f,t,f)","(7,0,1,TUR,1,TUR,f,t,f)","(8,0,0,\\"\\",\\"\\",JPN,f,f,t)","(9,1,0,JPN,1,JPN,f,t,f)","(10,1,0,JPN,1,TUR,t,f,f)"}
22	1	2	CAN	ITA	Canada	Italy	CAN	31.1	33.6	10	6	9	{"(0,2,0,CAN,2,CAN,f,t,f)","(1,0,0,\\"\\",\\"\\",ITA,f,f,t)","(2,0,2,ITA,2,ITA,f,t,f)","(3,2,0,CAN,2,CAN,f,t,f)","(4,1,0,CAN,1,ITA,t,f,f)","(5,0,2,ITA,2,CAN,t,f,f)","(6,3,0,CAN,3,CAN,f,t,f)","(7,0,2,ITA,2,ITA,f,t,f)","(8,2,0,CAN,2,CAN,f,t,f)"}
23	1	2	USA	NOR	United States	Norway	NOR	59.8	19.1	5	8	10	{"(0,0,1,NOR,1,NOR,f,t,f)","(1,0,1,NOR,1,USA,t,f,f)","(2,1,0,USA,1,USA,f,t,f)","(3,0,3,NOR,3,NOR,f,t,f)","(4,2,0,USA,2,USA,f,t,f)","(5,0,0,\\"\\",\\"\\",NOR,f,f,t)","(6,1,0,USA,1,NOR,t,f,f)","(7,0,2,NOR,2,USA,t,f,f)","(8,1,0,USA,1,USA,f,t,f)","(9,0,1,NOR,1,NOR,f,t,f)"}
24	1	2	CZE	NZL	Czech Republic	New Zealand	CZE	85.2	98.9	8	1	7	{"(0,2,0,CZE,2,CZE,f,t,f)","(1,0,1,NZL,1,NZL,f,t,f)","(2,3,0,CZE,3,CZE,f,t,f)","(3,1,0,CZE,1,NZL,t,f,f)","(4,0,0,\\"\\",\\"\\",CZE,f,f,t)","(5,0,0,\\"\\",\\"\\",CZE,f,f,t)","(6,2,0,CZE,2,CZE,f,t,f)"}
25	1	6	SUI	ITA	Switzerland	Italy	SUI	30.1	30.1	4	8	10	{"(0,0,0,\\"\\",\\"\\",SUI,f,f,t)","(1,0,1,ITA,1,SUI,t,f,f)","(2,3,0,SUI,3,SUI,f,t,f)","(3,0,2,ITA,2,ITA,f,t,f)","(4,0,0,\\"\\",\\"\\",SUI,f,f,t)","(5,1,0,SUI,1,SUI,f,t,f)","(6,0,2,ITA,2,ITA,f,t,f)","(7,0,1,ITA,1,SUI,t,f,f)","(8,0,1,ITA,1,SUI,t,f,f)","(9,0,1,ITA,1,SUI,t,f,f)"}
26	1	6	SWE	KOR	Sweden	Korea	KOR	68.1	30.9	8	3	9	{"(0,0,1,KOR,1,KOR,f,t,f)","(1,1,0,SWE,1,SWE,f,t,f)","(2,0,1,KOR,1,KOR,f,t,f)","(3,1,0,SWE,1,SWE,f,t,f)","(4,0,0,\\"\\",\\"\\",KOR,f,f,t)","(5,0,1,KOR,1,KOR,f,t,f)","(6,3,0,SWE,3,SWE,f,t,f)","(7,1,0,SWE,1,KOR,t,f,f)","(8,2,0,SWE,2,SWE,f,t,f)"}
27	1	6	CZE	USA	Czech Republic	United States	CZE	55.8	111.8	8	10	10	{"(0,1,0,CZE,1,CZE,f,t,f)","(1,0,3,USA,3,USA,f,t,f)","(2,2,0,CZE,2,CZE,f,t,f)","(3,0,2,USA,2,USA,f,t,f)","(4,1,0,CZE,1,CZE,f,t,f)","(5,0,1,USA,1,USA,f,t,f)","(6,3,0,CZE,3,CZE,f,t,f)","(7,0,4,USA,4,USA,f,t,f)","(8,0,0,\\"\\",\\"\\",CZE,f,f,t)","(9,1,0,CZE,1,CZE,f,t,f)"}
28	1	7	SWE	TUR	Sweden	Türkiye	SWE	19.9	98.4	10	3	7	{"(0,2,0,SWE,2,SWE,f,t,f)","(1,0,1,TUR,1,TUR,f,t,f)","(2,3,0,SWE,3,SWE,f,t,f)","(3,2,0,SWE,2,TUR,t,f,f)","(4,1,0,SWE,1,SWE,f,t,f)","(5,0,2,TUR,2,TUR,f,t,f)","(6,2,0,SWE,2,SWE,f,t,f)"}
29	1	7	NZL	NOR	New Zealand	Norway	NOR	214.7	18.9	2	9	8	{"(0,0,0,\\"\\",\\"\\",NOR,f,f,t)","(1,0,1,NOR,1,NOR,f,t,f)","(2,1,0,NZL,1,NZL,f,t,f)","(3,0,3,NOR,3,NOR,f,t,f)","(4,1,0,NZL,1,NZL,f,t,f)","(5,0,0,\\"\\",\\"\\",NOR,f,f,t)","(6,0,2,NOR,2,NOR,f,t,f)","(7,0,3,NOR,3,NZL,t,f,f)"}
30	1	7	CAN	JPN	Canada	Japan	CAN	36.9	195.7	6	3	9	{"(0,1,0,CAN,1,CAN,f,t,f)","(1,0,1,JPN,1,JPN,f,t,f)","(2,2,0,CAN,2,CAN,f,t,f)","(3,0,1,JPN,1,JPN,f,t,f)","(4,0,0,\\"\\",\\"\\",CAN,f,f,t)","(5,0,0,\\"\\",\\"\\",CAN,f,f,t)","(6,2,0,CAN,2,CAN,f,t,f)","(7,0,1,JPN,1,JPN,f,t,f)","(8,1,0,CAN,1,CAN,f,t,f)"}
31	1	7	GER	SCO	Germany	Scotland	SCO	100.6	20.8	6	8	10	{"(0,0,2,SCO,2,SCO,f,t,f)","(1,0,1,SCO,1,GER,t,f,f)","(2,0,1,SCO,1,GER,t,f,f)","(3,0,1,SCO,1,GER,t,f,f)","(4,2,0,GER,2,GER,f,t,f)","(5,1,0,GER,1,SCO,t,f,f)","(6,0,1,SCO,1,GER,t,f,f)","(7,2,0,GER,2,GER,f,t,f)","(8,0,2,SCO,2,SCO,f,t,f)","(9,1,0,GER,1,GER,f,t,f)"}
32	1	5	CZE	GER	Czech Republic	Germany	CZE	34.5	57.5	6	10	9	{"(0,1,0,CZE,1,CZE,f,t,f)","(1,0,3,GER,3,GER,f,t,f)","(2,0,2,GER,2,CZE,t,f,f)","(3,1,0,CZE,1,CZE,f,t,f)","(4,0,1,GER,1,GER,f,t,f)","(5,2,0,CZE,2,CZE,f,t,f)","(6,0,1,GER,1,GER,f,t,f)","(7,2,0,CZE,2,CZE,f,t,f)","(8,0,3,GER,3,GER,f,t,f)"}
33	1	5	JPN	USA	Japan	United States	USA	221.4	36	6	5	10	{"(0,0,1,USA,1,USA,f,t,f)","(1,1,0,JPN,1,JPN,f,t,f)","(2,1,0,JPN,1,USA,t,f,f)","(3,0,0,\\"\\",\\"\\",JPN,f,f,t)","(4,1,0,JPN,1,JPN,f,t,f)","(5,0,1,USA,1,USA,f,t,f)","(6,3,0,JPN,3,JPN,f,t,f)","(7,0,1,USA,1,USA,f,t,f)","(8,0,1,USA,1,JPN,t,f,f)","(9,0,1,USA,1,JPN,t,f,f)"}
34	1	5	ITA	TUR	Italy	Türkiye	ITA	15.2	34	7	2	9	{"(0,1,0,ITA,1,ITA,f,t,f)","(1,1,0,ITA,1,TUR,t,f,f)","(2,0,1,TUR,1,ITA,t,f,f)","(3,0,0,\\"\\",\\"\\",ITA,f,f,t)","(4,1,0,ITA,1,ITA,f,t,f)","(5,0,1,TUR,1,TUR,f,t,f)","(6,2,0,ITA,2,ITA,f,t,f)","(7,1,0,ITA,1,TUR,t,f,f)","(8,1,0,ITA,1,ITA,f,t,f)"}
35	1	5	NOR	CAN	Norway	Canada	CAN	71.8	30.2	8	6	10	{"(0,0,2,CAN,2,CAN,f,t,f)","(1,0,2,CAN,2,NOR,t,f,f)","(2,2,0,NOR,2,NOR,f,t,f)","(3,0,1,CAN,1,CAN,f,t,f)","(4,0,0,\\"\\",\\"\\",NOR,f,f,t)","(5,1,0,NOR,1,NOR,f,t,f)","(6,1,0,NOR,1,CAN,t,f,f)","(7,0,1,CAN,1,NOR,t,f,f)","(8,2,0,NOR,2,NOR,f,t,f)","(9,2,0,NOR,2,CAN,t,f,f)"}
36	1	4	SCO	SWE	Scotland	Sweden	SWE	20.9	14.1	4	7	9	{"(0,0,0,\\"\\",\\"\\",SWE,f,f,t)","(1,0,2,SWE,2,SWE,f,t,f)","(2,1,0,SCO,1,SCO,f,t,f)","(3,0,1,SWE,1,SWE,f,t,f)","(4,2,0,SCO,2,SCO,f,t,f)","(5,0,0,\\"\\",\\"\\",SWE,f,f,t)","(6,0,1,SWE,1,SWE,f,t,f)","(7,1,0,SCO,1,SCO,f,t,f)","(8,0,3,SWE,3,SWE,f,t,f)"}
37	1	4	GER	SUI	Germany	Switzerland	SUI	179.5	66.1	3	7	8	{"(0,0,0,\\"\\",\\"\\",SUI,f,f,t)","(1,0,0,\\"\\",\\"\\",SUI,f,f,t)","(2,0,2,SUI,2,SUI,f,t,f)","(3,1,0,GER,1,GER,f,t,f)","(4,0,3,SUI,3,SUI,f,t,f)","(5,1,0,GER,1,GER,f,t,f)","(6,0,2,SUI,2,SUI,f,t,f)","(7,1,0,GER,1,GER,f,t,f)"}
38	1	4	NZL	CAN	New Zealand	Canada	CAN	243.6	34.6	2	8	7	{"(0,0,2,CAN,2,CAN,f,t,f)","(1,0,1,CAN,1,NZL,t,f,f)","(2,1,0,NZL,1,NZL,f,t,f)","(3,0,2,CAN,2,CAN,f,t,f)","(4,0,0,\\"\\",\\"\\",NZL,f,f,t)","(5,1,0,NZL,1,NZL,f,t,f)","(6,0,3,CAN,3,CAN,f,t,f)"}
39	1	4	KOR	JPN	Korea	Japan	KOR	80.1	110	2	9	8	{"(0,1,0,KOR,1,KOR,f,t,f)","(1,0,1,JPN,1,JPN,f,t,f)","(2,0,1,JPN,1,KOR,t,f,f)","(3,0,2,JPN,2,KOR,t,f,f)","(4,1,0,KOR,1,KOR,f,t,f)","(5,0,2,JPN,2,JPN,f,t,f)","(6,0,1,JPN,1,KOR,t,f,f)","(7,0,2,JPN,2,KOR,t,f,f)"}
40	1	9	KOR	SUI	Korea	Switzerland	SUI	198	31.7	4	8	10	{"(0,0,0,\\"\\",\\"\\",SUI,f,f,t)","(1,0,3,SUI,3,SUI,f,t,f)","(2,1,0,KOR,1,KOR,f,t,f)","(3,0,1,SUI,1,SUI,f,t,f)","(4,1,0,KOR,1,KOR,f,t,f)","(5,0,0,\\"\\",\\"\\",SUI,f,f,t)","(6,1,0,KOR,1,SUI,t,f,f)","(7,1,0,KOR,1,KOR,f,t,f)","(8,0,2,SUI,2,SUI,f,t,f)","(9,0,2,SUI,2,KOR,t,f,f)"}
41	1	9	SCO	USA	Scotland	United States	SCO	21.7	119.7	10	8	10	{"(0,2,0,SCO,2,SCO,f,t,f)","(1,0,1,USA,1,USA,f,t,f)","(2,2,0,SCO,2,SCO,f,t,f)","(3,0,3,USA,3,USA,f,t,f)","(4,0,1,USA,1,SCO,t,f,f)","(5,2,0,SCO,2,SCO,f,t,f)","(6,0,2,USA,2,USA,f,t,f)","(7,0,1,USA,1,SCO,t,f,f)","(8,2,0,SCO,2,SCO,f,t,f)","(9,2,0,SCO,2,USA,t,f,f)"}
42	1	9	JPN	NZL	Japan	New Zealand	JPN	52.9	89.9	10	5	6	{"(0,3,0,JPN,3,JPN,f,t,f)","(1,0,1,NZL,1,NZL,f,t,f)","(2,4,0,JPN,4,JPN,f,t,f)","(3,0,1,NZL,1,NZL,f,t,f)","(4,3,0,JPN,3,JPN,f,t,f)","(5,0,3,NZL,3,NZL,f,t,f)"}
43	1	8	USA	KOR	United States	Korea	KOR	207.1	60.1	11	5	6	{"(0,0,2,KOR,2,KOR,f,t,f)","(1,4,0,USA,4,USA,f,t,f)","(2,2,0,USA,2,KOR,t,f,f)","(3,3,0,USA,3,USA,f,t,f)","(4,0,3,KOR,3,KOR,f,t,f)","(5,2,0,USA,2,USA,f,t,f)"}
44	1	8	ITA	GER	Italy	Germany	ITA	18.4	19.1	7	2	6	{"(0,1,0,ITA,1,ITA,f,t,f)","(1,3,0,ITA,3,GER,t,f,f)","(2,2,0,ITA,2,ITA,f,t,f)","(3,0,1,GER,1,GER,f,t,f)","(4,1,0,ITA,1,ITA,f,t,f)","(5,0,1,GER,1,GER,f,t,f)"}
45	1	8	NOR	SUI	Norway	Switzerland	SUI	348.1	73.6	4	11	7	{"(0,0,0,\\"\\",\\"\\",SUI,f,f,t)","(1,0,3,SUI,3,SUI,f,t,f)","(2,2,0,NOR,2,NOR,f,t,f)","(3,0,3,SUI,3,SUI,f,t,f)","(4,0,2,SUI,2,NOR,t,f,f)","(5,2,0,NOR,2,NOR,f,t,f)","(6,0,3,SUI,3,SUI,f,t,f)"}
46	1	8	TUR	CZE	Türkiye	Czech Republic	TUR	48.6	120.2	6	7	11	{"(0,1,0,TUR,1,TUR,f,t,f)","(1,2,0,TUR,2,CZE,t,f,f)","(2,0,0,\\"\\",\\"\\",TUR,f,f,t)","(3,0,0,\\"\\",\\"\\",TUR,f,f,t)","(4,0,1,CZE,1,TUR,t,f,f)","(5,1,0,TUR,1,TUR,f,t,f)","(6,0,2,CZE,2,CZE,f,t,f)","(7,0,2,CZE,2,TUR,t,f,f)","(8,0,1,CZE,1,TUR,t,f,f)","(9,2,0,TUR,2,TUR,f,t,f)","(10,0,1,CZE,1,CZE,f,t,f)"}
47	1	14	KOR	SCO	Korea	Scotland	KOR	68.6	95	3	9	7	{"(0,0,0,\\"\\",\\"\\",KOR,f,f,t)","(1,1,0,KOR,1,KOR,f,t,f)","(2,0,5,SCO,5,SCO,f,t,f)","(3,1,0,KOR,1,KOR,f,t,f)","(4,0,2,SCO,2,SCO,f,t,f)","(5,1,0,KOR,1,KOR,f,t,f)","(6,0,2,SCO,2,SCO,f,t,f)"}
48	1	14	SUI	NZL	Switzerland	New Zealand	SUI	72	151.4	7	5	10	{"(0,1,0,SUI,1,SUI,f,t,f)","(1,0,1,NZL,1,NZL,f,t,f)","(2,1,0,SUI,1,SUI,f,t,f)","(3,1,0,SUI,1,NZL,t,f,f)","(4,1,0,SUI,1,SUI,f,t,f)","(5,0,1,NZL,1,NZL,f,t,f)","(6,2,0,SUI,2,SUI,f,t,f)","(7,0,0,\\"\\",\\"\\",NZL,f,f,t)","(8,0,3,NZL,3,NZL,f,t,f)","(9,1,0,SUI,1,SUI,f,t,f)"}
49	1	14	USA	CAN	United States	Canada	CAN	36.1	15.3	6	9	9	{"(0,0,0,\\"\\",\\"\\",CAN,f,f,t)","(1,0,3,CAN,3,CAN,f,t,f)","(2,2,0,USA,2,USA,f,t,f)","(3,0,2,CAN,2,CAN,f,t,f)","(4,1,0,USA,1,USA,f,t,f)","(5,0,2,CAN,2,CAN,f,t,f)","(6,2,0,USA,2,USA,f,t,f)","(7,0,2,CAN,2,CAN,f,t,f)","(8,1,0,USA,1,USA,f,t,f)"}
50	1	14	SWE	CZE	Sweden	Czech Republic	SWE	17.3	81.1	10	3	7	{"(0,1,0,SWE,1,SWE,f,t,f)","(1,0,1,CZE,1,CZE,f,t,f)","(2,3,0,SWE,3,SWE,f,t,f)","(3,0,1,CZE,1,CZE,f,t,f)","(4,3,0,SWE,3,SWE,f,t,f)","(5,0,1,CZE,1,CZE,f,t,f)","(6,3,0,SWE,3,SWE,f,t,f)"}
51	1	15	GER	CAN	Germany	Canada	CAN	52.9	18	4	9	9	{"(0,0,2,CAN,2,CAN,f,t,f)","(1,0,0,\\"\\",\\"\\",GER,f,f,t)","(2,1,0,GER,1,GER,f,t,f)","(3,0,2,CAN,2,CAN,f,t,f)","(4,1,0,GER,1,GER,f,t,f)","(5,0,2,CAN,2,CAN,f,t,f)","(6,0,1,CAN,1,GER,t,f,f)","(7,2,0,GER,2,GER,f,t,f)","(8,0,2,CAN,2,CAN,f,t,f)"}
52	1	15	ITA	SWE	Italy	Sweden	ITA	35.8	43.3	2	8	7	{"(0,0,2,SWE,2,ITA,t,f,f)","(1,0,1,SWE,1,ITA,t,f,f)","(2,0,2,SWE,2,ITA,t,f,f)","(3,0,1,SWE,1,ITA,t,f,f)","(4,1,0,ITA,1,ITA,f,t,f)","(5,1,0,ITA,1,SWE,t,f,f)","(6,0,2,SWE,2,ITA,t,f,f)"}
53	1	15	JPN	NOR	Japan	Norway	JPN	45.7	91.3	4	7	8	{"(0,0,3,NOR,3,JPN,t,f,f)","(1,1,0,JPN,1,JPN,f,t,f)","(2,0,0,\\"\\",\\"\\",NOR,f,f,t)","(3,0,1,NOR,1,NOR,f,t,f)","(4,0,1,NOR,1,JPN,t,f,f)","(5,1,0,JPN,1,JPN,f,t,f)","(6,0,2,NOR,2,NOR,f,t,f)","(7,2,0,JPN,2,JPN,f,t,f)"}
54	1	15	NZL	TUR	New Zealand	Türkiye	TUR	162.1	36	5	8	8	{"(0,0,1,TUR,1,TUR,f,t,f)","(1,3,0,NZL,3,NZL,f,t,f)","(2,0,2,TUR,2,TUR,f,t,f)","(3,0,1,TUR,1,NZL,t,f,f)","(4,0,0,\\"\\",\\"\\",NZL,f,f,t)","(5,0,3,TUR,3,NZL,t,f,f)","(6,2,0,NZL,2,NZL,f,t,f)","(7,0,1,TUR,1,TUR,f,t,f)"}
55	1	17	SWE	NZL	Sweden	New Zealand	SWE	88	222.3	7	1	8	{"(0,1,0,SWE,1,SWE,f,t,f)","(1,0,1,NZL,1,NZL,f,t,f)","(2,0,0,\\"\\",\\"\\",SWE,f,f,t)","(3,1,0,SWE,1,SWE,f,t,f)","(4,1,0,SWE,1,NZL,t,f,f)","(5,1,0,SWE,1,SWE,f,t,f)","(6,1,0,SWE,1,NZL,t,f,f)","(7,2,0,SWE,2,SWE,f,t,f)"}
56	1	17	CAN	SCO	Canada	Scotland	SCO	158.1	35	3	6	9	{"(0,0,1,SCO,1,SCO,f,t,f)","(1,1,0,CAN,1,CAN,f,t,f)","(2,0,2,SCO,2,SCO,f,t,f)","(3,0,0,\\"\\",\\"\\",CAN,f,f,t)","(4,1,0,CAN,1,CAN,f,t,f)","(5,0,1,SCO,1,SCO,f,t,f)","(6,1,0,CAN,1,CAN,f,t,f)","(7,0,0,\\"\\",\\"\\",SCO,f,f,t)","(8,0,2,SCO,2,SCO,f,t,f)"}
57	1	17	GER	KOR	Germany	Korea	GER	51.9	360.9	7	4	9	{"(0,1,0,GER,1,GER,f,t,f)","(1,0,1,KOR,1,KOR,f,t,f)","(2,1,0,GER,1,GER,f,t,f)","(3,0,0,\\"\\",\\"\\",KOR,f,f,t)","(4,1,0,GER,1,KOR,t,f,f)","(5,0,1,KOR,1,GER,t,f,f)","(6,2,0,GER,2,GER,f,t,f)","(7,0,2,KOR,2,KOR,f,t,f)","(8,2,0,GER,2,GER,f,t,f)"}
58	1	17	JPN	SUI	Japan	Switzerland	JPN	13	28.7	6	7	10	{"(0,1,0,JPN,1,JPN,f,t,f)","(1,0,0,\\"\\",\\"\\",SUI,f,f,t)","(2,0,1,SUI,1,SUI,f,t,f)","(3,1,0,JPN,1,JPN,f,t,f)","(4,0,3,SUI,3,SUI,f,t,f)","(5,1,0,JPN,1,JPN,f,t,f)","(6,0,1,SUI,1,SUI,f,t,f)","(7,2,0,JPN,2,JPN,f,t,f)","(8,1,0,JPN,1,SUI,t,f,f)","(9,0,2,SUI,2,JPN,t,f,f)"}
59	1	16	SUI	USA	Switzerland	United States	USA	72.3	58.3	12	9	10	{"(0,0,1,USA,1,USA,f,t,f)","(1,1,0,SUI,1,SUI,f,t,f)","(2,0,2,USA,2,USA,f,t,f)","(3,3,0,SUI,3,SUI,f,t,f)","(4,0,2,USA,2,USA,f,t,f)","(5,2,0,SUI,2,SUI,f,t,f)","(6,0,1,USA,1,USA,f,t,f)","(7,2,0,SUI,2,SUI,f,t,f)","(8,0,3,USA,3,USA,f,t,f)","(9,4,0,SUI,4,SUI,f,t,f)"}
60	1	16	TUR	KOR	Türkiye	Korea	TUR	31.9	230.3	8	3	8	{"(0,2,0,TUR,2,TUR,f,t,f)","(1,1,0,TUR,1,KOR,t,f,f)","(2,2,0,TUR,2,TUR,f,t,f)","(3,0,2,KOR,2,KOR,f,t,f)","(4,1,0,TUR,1,TUR,f,t,f)","(5,1,0,TUR,1,KOR,t,f,f)","(6,0,1,KOR,1,TUR,t,f,f)","(7,1,0,TUR,1,TUR,f,t,f)"}
61	1	16	CZE	ITA	Czech Republic	Italy	CZE	21.7	33.2	4	8	8	{"(0,0,1,ITA,1,CZE,t,f,f)","(1,2,0,CZE,2,CZE,f,t,f)","(2,0,2,ITA,2,ITA,f,t,f)","(3,1,0,CZE,1,CZE,f,t,f)","(4,0,2,ITA,2,ITA,f,t,f)","(5,0,2,ITA,2,CZE,t,f,f)","(6,0,1,ITA,1,CZE,t,f,f)","(7,1,0,CZE,1,CZE,f,t,f)"}
62	1	16	SCO	NOR	Scotland	Norway	SCO	19.7	32.2	9	5	9	{"(0,0,0,\\"\\",\\"\\",SCO,f,f,t)","(1,3,0,SCO,3,SCO,f,t,f)","(2,0,2,NOR,2,NOR,f,t,f)","(3,0,0,\\"\\",\\"\\",SCO,f,f,t)","(4,1,0,SCO,1,SCO,f,t,f)","(5,0,1,NOR,1,NOR,f,t,f)","(6,2,0,SCO,2,SCO,f,t,f)","(7,0,2,NOR,2,NOR,f,t,f)","(8,3,0,SCO,3,SCO,f,t,f)"}
63	1	12	NOR	SWE	Norway	Sweden	NOR	30.4	60.6	8	7	11	{"(0,1,0,NOR,1,NOR,f,t,f)","(1,0,2,SWE,2,SWE,f,t,f)","(2,0,1,SWE,1,NOR,t,f,f)","(3,1,0,NOR,1,NOR,f,t,f)","(4,0,1,SWE,1,SWE,f,t,f)","(5,1,0,NOR,1,NOR,f,t,f)","(6,0,1,SWE,1,SWE,f,t,f)","(7,1,0,NOR,1,NOR,f,t,f)","(8,3,0,NOR,3,SWE,t,f,f)","(9,0,2,SWE,2,NOR,t,f,f)","(10,1,0,NOR,1,NOR,f,t,f)"}
64	1	12	SCO	JPN	Scotland	Japan	SCO	95.7	98.6	9	2	6	{"(0,1,0,SCO,1,SCO,f,t,f)","(1,1,0,SCO,1,JPN,t,f,f)","(2,1,0,SCO,1,SCO,f,t,f)","(3,1,0,SCO,1,JPN,t,f,f)","(4,0,2,JPN,2,SCO,t,f,f)","(5,5,0,SCO,5,SCO,f,t,f)"}
65	1	12	GER	NZL	Germany	New Zealand	NZL	241.2	132.7	8	11	10	{"(0,0,3,NZL,3,NZL,f,t,f)","(1,1,0,GER,1,GER,f,t,f)","(2,0,1,NZL,1,NZL,f,t,f)","(3,1,0,GER,1,GER,f,t,f)","(4,2,0,GER,2,NZL,t,f,f)","(5,0,2,NZL,2,GER,t,f,f)","(6,2,0,GER,2,GER,f,t,f)","(7,2,0,GER,2,NZL,t,f,f)","(8,0,2,NZL,2,GER,t,f,f)","(9,0,3,NZL,3,GER,t,f,f)"}
66	1	12	CAN	KOR	Canada	Korea	KOR	95.7	95.6	9	4	8	{"(0,0,0,\\"\\",\\"\\",KOR,f,f,t)","(1,0,1,KOR,1,KOR,f,t,f)","(2,1,0,CAN,1,CAN,f,t,f)","(3,1,0,CAN,1,KOR,t,f,f)","(4,0,1,KOR,1,CAN,t,f,f)","(5,3,0,CAN,3,CAN,f,t,f)","(6,0,2,KOR,2,KOR,f,t,f)","(7,4,0,CAN,4,CAN,f,t,f)"}
67	1	13	CZE	JPN	Czech Republic	Japan	JPN	146.4	116.9	3	9	8	{"(0,0,3,JPN,3,JPN,f,t,f)","(1,0,0,\\"\\",\\"\\",CZE,f,f,t)","(2,0,0,\\"\\",\\"\\",CZE,f,f,t)","(3,1,0,CZE,1,CZE,f,t,f)","(4,0,1,JPN,1,JPN,f,t,f)","(5,2,0,CZE,2,CZE,f,t,f)","(6,0,2,JPN,2,JPN,f,t,f)","(7,0,3,JPN,3,CZE,t,f,f)"}
68	1	13	NOR	GER	Norway	Germany	NOR	39.4	250.7	5	3	9	{"(0,0,0,\\"\\",\\"\\",NOR,f,f,t)","(1,1,0,NOR,1,NOR,f,t,f)","(2,0,0,\\"\\",\\"\\",GER,f,f,t)","(3,0,1,GER,1,GER,f,t,f)","(4,0,0,\\"\\",\\"\\",NOR,f,f,t)","(5,2,0,NOR,2,NOR,f,t,f)","(6,0,1,GER,1,GER,f,t,f)","(7,2,0,NOR,2,NOR,f,t,f)","(8,0,1,GER,1,GER,f,t,f)"}
69	1	13	TUR	SUI	Türkiye	Switzerland	SUI	303.7	140.4	2	8	6	{"(0,0,3,SUI,3,SUI,f,t,f)","(1,1,0,TUR,1,TUR,f,t,f)","(2,0,3,SUI,3,SUI,f,t,f)","(3,0,2,SUI,2,TUR,t,f,f)","(4,1,0,TUR,1,TUR,f,t,f)","(5,0,0,\\"\\",\\"\\",SUI,f,f,t)"}
70	1	13	ITA	USA	Italy	United States	USA	35.5	14.3	11	4	7	{"(0,0,1,USA,1,USA,f,t,f)","(1,2,0,ITA,2,ITA,f,t,f)","(2,3,0,ITA,3,USA,t,f,f)","(3,3,0,ITA,3,ITA,f,t,f)","(4,0,3,USA,3,USA,f,t,f)","(5,0,0,\\"\\",\\"\\",ITA,f,f,t)","(6,3,0,ITA,3,ITA,f,t,f)"}
71	1	11	NZL	ITA	New Zealand	Italy	ITA	58.7	46.5	3	8	9	{"(0,0,1,ITA,1,ITA,f,t,f)","(1,0,0,\\"\\",\\"\\",NZL,f,f,t)","(2,1,0,NZL,1,NZL,f,t,f)","(3,0,0,\\"\\",\\"\\",ITA,f,f,t)","(4,0,4,ITA,4,ITA,f,t,f)","(5,0,0,\\"\\",\\"\\",NZL,f,f,t)","(6,0,0,\\"\\",\\"\\",NZL,f,f,t)","(7,2,0,NZL,2,NZL,f,t,f)","(8,0,3,ITA,3,ITA,f,t,f)"}
72	1	11	USA	TUR	United States	Türkiye	USA	103.3	159.6	10	4	8	{"(0,2,0,USA,2,USA,f,t,f)","(1,0,1,TUR,1,TUR,f,t,f)","(2,3,0,USA,3,USA,f,t,f)","(3,0,2,TUR,2,TUR,f,t,f)","(4,2,0,USA,2,USA,f,t,f)","(5,0,1,TUR,1,TUR,f,t,f)","(6,2,0,USA,2,USA,f,t,f)","(7,1,0,USA,1,TUR,t,f,f)"}
73	1	11	KOR	CZE	Korea	Czech Republic	KOR	46.4	88.8	3	8	8	{"(0,0,1,CZE,1,KOR,t,f,f)","(1,0,1,CZE,1,KOR,t,f,f)","(2,1,0,KOR,1,KOR,f,t,f)","(3,0,2,CZE,2,CZE,f,t,f)","(4,0,1,CZE,1,KOR,t,f,f)","(5,0,0,\\"\\",\\"\\",KOR,f,f,t)","(6,2,0,KOR,2,KOR,f,t,f)","(7,0,3,CZE,3,CZE,f,t,f)"}
74	1	11	SUI	SCO	Switzerland	Scotland	SUI	6.5	48.4	7	4	9	{"(0,2,0,SUI,2,SUI,f,t,f)","(1,0,2,SCO,2,SCO,f,t,f)","(2,1,0,SUI,1,SUI,f,t,f)","(3,0,0,\\"\\",\\"\\",SCO,f,f,t)","(4,0,0,\\"\\",\\"\\",SCO,f,f,t)","(5,0,1,SCO,1,SCO,f,t,f)","(6,1,0,SUI,1,SUI,f,t,f)","(7,0,1,SCO,1,SCO,f,t,f)","(8,3,0,SUI,3,SUI,f,t,f)"}
75	1	10	TUR	GER	Türkiye	Germany	GER	65.1	22.9	6	9	10	{"(0,0,2,GER,2,GER,f,t,f)","(1,5,0,TUR,5,TUR,f,t,f)","(2,0,1,GER,1,GER,f,t,f)","(3,0,0,\\"\\",\\"\\",TUR,f,f,t)","(4,0,1,GER,1,TUR,t,f,f)","(5,1,0,TUR,1,TUR,f,t,f)","(6,0,2,GER,2,GER,f,t,f)","(7,0,1,GER,1,TUR,t,f,f)","(8,0,0,\\"\\",\\"\\",TUR,f,f,t)","(9,0,2,GER,2,TUR,t,f,f)"}
76	1	10	CZE	CAN	Czech Republic	Canada	CAN	45.6	17.9	3	8	8	{"(0,0,1,CAN,1,CAN,f,t,f)","(1,1,0,CZE,1,CZE,f,t,f)","(2,0,2,CAN,2,CAN,f,t,f)","(3,0,3,CAN,3,CZE,t,f,f)","(4,1,0,CZE,1,CZE,f,t,f)","(5,0,1,CAN,1,CAN,f,t,f)","(6,1,0,CZE,1,CZE,f,t,f)","(7,0,1,CAN,1,CAN,f,t,f)"}
77	1	10	JPN	SWE	Japan	Sweden	SWE	37	30	6	9	10	{"(0,0,2,SWE,2,SWE,f,t,f)","(1,1,0,JPN,1,JPN,f,t,f)","(2,0,1,SWE,1,SWE,f,t,f)","(3,2,0,JPN,2,JPN,f,t,f)","(4,0,3,SWE,3,SWE,f,t,f)","(5,0,1,SWE,1,JPN,t,f,f)","(6,2,0,JPN,2,JPN,f,t,f)","(7,0,1,SWE,1,SWE,f,t,f)","(8,1,0,JPN,1,JPN,f,t,f)","(9,0,1,SWE,1,SWE,f,t,f)"}
78	1	10	ITA	NOR	Italy	Norway	ITA	36.8	126.4	8	9	11	{"(0,0,2,NOR,2,ITA,t,f,f)","(1,2,0,ITA,2,ITA,f,t,f)","(2,0,2,NOR,2,NOR,f,t,f)","(3,0,0,\\"\\",\\"\\",ITA,f,f,t)","(4,3,0,ITA,3,ITA,f,t,f)","(5,0,3,NOR,3,NOR,f,t,f)","(6,1,0,ITA,1,ITA,f,t,f)","(7,0,1,NOR,1,NOR,f,t,f)","(8,1,0,ITA,1,ITA,f,t,f)","(9,1,0,ITA,1,NOR,t,f,f)","(10,0,1,NOR,1,ITA,t,f,f)"}
\.


--
-- Data for Name: player_lineup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.player_lineup (id, game_id, "position", player) FROM stdin;
1	1	lead	nico
2	1	second	edu
3	1	third	mikel
4	1	fourth	sergio
5	1	alternate	luis
6	2	lead	luis
7	2	second	edu
8	2	third	mikel
9	2	fourth	sergio
10	2	alternate	nico
11	3	lead	luis
12	3	second	nico
13	3	third	edu
14	3	fourth	mikel
15	3	alternate	sergio
16	4	lead	luis
17	4	second	nico
18	4	third	mikel
19	4	fourth	sergio
20	4	alternate	edu
21	5	lead	luis
22	5	second	nico
23	5	third	mikel
24	5	fourth	sergio
25	5	alternate	edu
26	6	lead	luis
27	6	second	nico
28	6	third	mikel
29	6	fourth	sergio
30	6	alternate	edu
31	7	lead	luis
32	7	second	nico
33	7	third	mikel
34	7	fourth	sergio
35	7	alternate	edu
36	8	lead	luis
37	8	second	nico
38	8	third	mikel
39	8	fourth	sergio
40	8	alternate	edu
\.


--
-- Data for Name: shots_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shots_table (shot_id, game_id, end_num, throw_in_end, thrower_position, shot_type, turn, score) FROM stdin;
1	1	1	1	lead	Slow: Draw	OUT	3
2	1	1	2	lead	Fast: Take-out	OUT	3
3	1	1	3	second	Fast: Take-out	OUT	2
4	1	1	4	second	Fast: Clearing	OUT	3
5	1	1	5	third	Fast: Clearing	IN	4
6	1	1	6	third	Fast: Take-out	IN	0
7	1	1	7	fourth	Fast: Hit and Roll	OUT	2
8	1	1	8	fourth	Fast: Double Take-out	IN	2
9	1	2	1	lead	Slow: Front	OUT	3
10	1	2	2	lead	Slow: Draw	OUT	0
11	1	2	3	second	Fast: Promotion Take-out	IN	4
12	1	2	4	second	Fast: Hit and Roll	IN	0
13	1	2	5	third	Fast: Double Take-out	IN	4
14	1	2	6	third	Slow: Raise	OUT	0
15	1	2	7	fourth	Slow: Draw	IN	1
16	1	2	8	fourth	Slow: Draw	IN	4
17	1	3	1	lead	Slow: Guard	IN	3
18	1	3	2	lead	Slow: Draw	OUT	2
19	1	3	3	second	Slow: Draw	IN	3
20	1	3	4	second	Fast: Hit and Roll	OUT	1
21	1	3	5	third	Fast: Hit and Roll	OUT	3
22	1	3	6	third	Fast: Take-out	IN	2
23	1	3	7	fourth	Fast: Double Take-out	IN	1
24	1	3	8	fourth	Fast: Hit and Roll	OUT	3
25	1	4	1	lead	Slow: Guard	IN	3
26	1	4	2	lead	Slow: Guard	IN	0
27	1	4	3	second	Slow: Draw	OUT	1
28	1	4	4	second	Slow: Raise	IN	3
29	1	4	5	third	Slow: Raise	OUT	0
30	1	4	6	third	Fast: Clearing	OUT	4
31	1	4	7	fourth	Slow: Draw	OUT	0
32	1	4	8	fourth	Slow: Draw	IN	0
33	1	5	1	lead	Slow: Guard	IN	3
34	1	5	2	lead	Slow: Guard	OUT	2
35	1	5	3	second	Fast: Promotion Take-out	OUT	1
36	1	5	4	second	Slow: Draw	OUT	1
37	1	5	5	third	Slow: Draw	OUT	4
38	1	5	6	third	Slow: Draw	IN	1
39	1	5	7	fourth	Slow: Draw	IN	0
40	1	5	8	fourth	Slow: Draw	IN	0
41	2	1	1	lead	Slow: Front	OUT	4
42	2	1	2	lead	Slow: Draw	OUT	0
43	2	1	3	second	Fast: Clearing	OUT	3
44	2	1	4	second	Fast: Promotion Take-out	OUT	2
45	2	1	5	third	Fast: Take-out	IN	2
46	2	1	6	third	Fast: Take-out	IN	1
47	2	1	7	fourth	Fast: Double Take-out	IN	4
48	2	1	8	fourth	Fast: Clearing	OUT	0
49	2	2	1	lead	Slow: Draw	OUT	0
50	2	2	2	lead	Slow: Freeze	IN	4
51	2	2	3	second	Fast: Clearing	OUT	0
52	2	2	4	second	Fast: Clearing	OUT	2
53	2	2	5	third	Fast: Clearing	OUT	4
54	2	2	6	third	Fast: Promotion Take-out	OUT	4
55	2	2	7	fourth	Fast: Hit and Roll	OUT	3
56	2	2	8	fourth	Fast: Take-out	OUT	4
57	2	3	1	lead	Slow: Front	OUT	1
58	2	3	2	lead	Slow: Draw	OUT	2
59	2	3	3	second	Slow: Raise	OUT	2
60	2	3	4	second	Slow: Raise	IN	4
61	2	3	5	third	Fast: Hit and Roll	IN	4
62	2	3	6	third	Fast: Hit and Roll	IN	4
63	2	3	7	fourth	Fast: Double Take-out	IN	4
64	2	3	8	fourth	Fast: Take-out	OUT	0
65	2	4	1	lead	Slow: Front	IN	4
66	2	4	2	lead	Slow: Draw	OUT	4
67	2	4	3	second	Fast: Clearing	OUT	2
68	2	4	4	second	Fast: Double Take-out	OUT	2
69	2	4	5	third	Fast: Clearing	OUT	2
70	2	4	6	third	Fast: Clearing	OUT	2
71	2	4	7	fourth	Fast: Promotion Take-out	IN	3
72	2	4	8	fourth	Fast: Promotion Take-out	IN	4
73	2	5	1	lead	Slow: Front	OUT	4
74	2	5	2	lead	Slow: Draw	OUT	0
75	2	5	3	second	Slow: Draw	IN	4
76	2	5	4	second	Slow: Draw	OUT	2
77	2	5	5	third	Fast: Promotion Take-out	OUT	4
78	2	5	6	third	Slow: Raise	IN	4
79	2	5	7	fourth	Slow: Freeze	OUT	2
80	2	5	8	fourth	Slow: Freeze	OUT	1
81	2	6	1	lead	Slow: Front	IN	4
82	2	6	2	lead	Slow: Draw	IN	3
83	2	6	3	second	Slow: Draw	OUT	0
84	2	6	4	second	Slow: Raise	OUT	3
85	2	6	5	third	Fast: Take-out	OUT	4
86	2	6	6	third	Slow: Raise	OUT	4
87	2	6	7	fourth	Fast: Hit and Roll	OUT	4
88	2	6	8	fourth	Fast: Take-out	OUT	0
89	2	7	1	lead	Slow: Front	OUT	0
90	2	7	2	lead	Slow: Front	OUT	1
91	2	7	3	second	Slow: Guard	OUT	4
92	2	7	4	second	Slow: Guard	OUT	2
93	2	7	5	third	Slow: Draw	OUT	4
94	2	7	6	third	Slow: Draw	OUT	4
95	2	7	7	fourth	Slow: Draw	OUT	4
96	2	7	8	fourth	Slow: Draw	OUT	1
97	2	8	1	lead	Slow: Front	IN	1
98	2	8	2	lead	Slow: Front	IN	4
99	2	8	3	second	Slow: Draw	IN	0
100	2	8	4	second	Slow: Draw	IN	3
101	2	8	5	third	Slow: Freeze	IN	2
102	2	8	6	third	Slow: Freeze	IN	1
103	3	1	1	lead	Fast: Take-out	OUT	2
104	3	1	2	lead	Slow: Draw	OUT	1
105	3	1	3	second	Fast: Take-out	OUT	4
106	3	1	4	second	Fast: Take-out	OUT	4
107	3	1	5	third	Slow: Draw	OUT	0
108	3	1	6	third	Slow: Draw	OUT	4
109	3	1	7	fourth	Fast: Take-out	IN	0
110	3	1	8	fourth	Slow: Draw	IN	4
111	3	2	1	lead	Slow: Front	OUT	4
112	3	2	2	lead	Slow: Freeze	OUT	0
113	3	2	3	second	Slow: Raise	IN	0
114	3	2	4	second	Slow: Raise	OUT	4
115	3	2	5	third	Slow: Wick	OUT	2
116	3	2	6	third	Slow: Draw	OUT	2
117	3	2	7	fourth	Fast: Promotion Take-out	OUT	3
118	3	2	8	fourth	Slow: Guard	OUT	3
119	3	3	1	lead	Slow: Draw	OUT	4
120	3	3	2	lead	Slow: Guard	OUT	2
121	3	3	3	second	Slow: Front	OUT	2
122	3	3	4	second	Slow: Freeze	IN	2
123	3	3	5	third	Slow: Guard	IN	0
124	3	3	6	third	Fast: Double Take-out	OUT	2
125	3	3	7	fourth	Slow: Raise	OUT	3
126	3	3	8	fourth	Fast: Take-out	IN	4
127	3	4	1	lead	Slow: Draw	OUT	4
128	3	4	2	lead	Fast: Take-out	IN	4
129	3	4	3	second	Fast: Take-out	IN	4
130	3	4	4	second	Fast: Take-out	OUT	4
131	3	4	5	third	Slow: Draw	OUT	3
132	3	4	6	third	Fast: Take-out	OUT	2
133	3	4	7	fourth	Slow: Draw	OUT	4
134	3	4	8	fourth	Slow: Draw	OUT	0
135	3	5	1	lead	Slow: Draw	OUT	3
136	3	5	2	lead	Slow: Draw	IN	2
137	3	5	3	second	Fast: Take-out	IN	4
138	3	5	4	second	Fast: Hit and Roll	OUT	2
139	3	5	5	third	Fast: Take-out	OUT	2
140	3	5	6	third	Slow: Draw	OUT	1
141	3	5	7	fourth	Slow: Draw	IN	4
142	3	5	8	fourth	Fast: Take-out	OUT	4
143	3	6	1	lead	Slow: Front	IN	4
144	3	6	2	lead	Slow: Draw	OUT	1
145	3	6	3	second	Fast: Clearing	IN	4
146	3	6	4	second	Fast: Take-out	OUT	0
147	3	6	5	third	Fast: Hit and Roll	OUT	0
148	3	6	6	third	Fast: Hit and Roll	OUT	3
149	3	6	7	fourth	Slow: Draw	OUT	0
150	3	6	8	fourth	Slow: Draw	IN	0
151	3	7	1	lead	Slow: Front	OUT	3
152	3	7	2	lead	Fast: Take-out	OUT	0
153	3	7	3	second	Fast: Take-out	OUT	0
154	3	7	4	second	Fast: Take-out	OUT	4
155	3	7	5	third	Fast: Take-out	OUT	4
156	3	7	6	third	Fast: Take-out	OUT	2
157	3	7	7	fourth	Slow: Draw	OUT	2
158	3	7	8	fourth	Fast: Hit and Roll	OUT	2
159	3	8	1	lead	Slow: Draw	OUT	3
160	3	8	2	lead	Slow: Guard	OUT	3
161	3	8	3	second	Slow: Draw	OUT	0
162	3	8	4	second	Slow: Draw	IN	1
163	3	8	5	third	Slow: Raise	IN	2
164	3	8	6	third	Slow: Raise	IN	0
165	3	8	7	fourth	Slow: Raise	OUT	0
166	3	8	8	fourth	Fast: Take-out	OUT	0
167	4	1	1	lead	Slow: Front	OUT	4
168	4	1	2	lead	Fast: Hit and Roll	OUT	0
169	4	1	3	second	Fast: Double Take-out	OUT	4
170	4	1	4	second	Slow: Draw	OUT	2
171	4	1	5	third	Fast: Take-out	IN	0
172	4	1	6	third	Slow: Draw	OUT	2
173	4	1	7	fourth	Slow: Draw	IN	0
174	4	1	8	fourth	Fast: Double Take-out	IN	2
175	4	2	1	lead	Slow: Draw	OUT	4
176	4	2	2	lead	Slow: Draw	OUT	4
177	4	2	3	second	Fast: Hit and Roll	OUT	2
178	4	2	4	second	Fast: Take-out	OUT	4
179	4	2	5	third	Fast: Hit and Roll	OUT	3
180	4	2	6	third	Fast: Take-out	OUT	4
181	4	2	7	fourth	Fast: Hit and Roll	IN	3
182	4	2	8	fourth	Fast: Take-out	OUT	4
183	4	3	1	lead	Slow: Front	IN	0
184	4	3	2	lead	Slow: Draw	IN	3
185	4	3	3	second	Slow: Guard	IN	1
186	4	3	4	second	Fast: Double Take-out	OUT	2
187	4	3	5	third	Slow: Draw	IN	2
188	4	3	6	third	Slow: Draw	OUT	0
189	4	3	7	fourth	Fast: Clearing	OUT	4
190	4	3	8	fourth	Fast: Clearing	OUT	0
191	4	4	1	lead	Slow: Front	IN	4
192	4	4	2	lead	Slow: Draw	IN	3
193	4	4	3	second	Fast: Hit and Roll	OUT	2
194	4	4	4	second	Fast: Take-out	IN	4
195	4	4	5	third	Fast: Promotion Take-out	OUT	0
196	4	4	6	third	Fast: Take-out	OUT	0
197	4	4	7	fourth	Fast: Hit and Roll	IN	2
198	4	4	8	fourth	Slow: Draw	OUT	0
199	4	5	1	lead	Slow: Front	OUT	4
200	4	5	2	lead	Slow: Draw	OUT	4
201	4	5	3	second	Fast: Promotion Take-out	OUT	3
202	4	5	4	second	Fast: Take-out	OUT	4
203	4	5	5	third	Fast: Take-out	OUT	0
204	4	5	6	third	Fast: Take-out	OUT	4
205	4	5	7	fourth	Fast: Hit and Roll	IN	2
206	4	5	8	fourth	Slow: Draw	OUT	4
207	4	6	1	lead	Slow: Front	OUT	2
208	4	6	2	lead	Slow: Front	IN	3
209	4	6	3	second	Slow: Draw	OUT	3
210	4	6	4	second	Slow: Guard	OUT	4
211	4	6	5	third	Slow: Draw	OUT	4
212	4	6	6	third	Slow: Guard	OUT	4
213	4	6	7	fourth	Slow: Draw	OUT	4
214	4	6	8	fourth	Slow: Draw	OUT	1
215	4	7	1	lead	Slow: Front	OUT	3
216	4	7	2	lead	Slow: Front	OUT	0
217	4	7	3	second	Slow: Draw	OUT	0
218	4	7	4	second	Slow: Raise	OUT	4
219	4	7	5	third	Fast: Promotion Take-out	OUT	2
220	4	7	6	third	Fast: Promotion Take-out	OUT	4
221	4	7	7	fourth	Fast: Take-out	IN	3
222	4	7	8	fourth	Fast: Double Take-out	OUT	4
223	4	8	1	lead	Slow: Front	OUT	2
224	4	8	2	lead	Slow: Front	IN	4
225	4	8	3	second	Fast: Hit and Roll	IN	2
226	4	8	4	second	Slow: Front	OUT	4
227	4	8	5	third	Slow: Draw	IN	1
228	4	8	6	third	Slow: Draw	IN	2
229	4	8	7	fourth	Slow: Draw	OUT	2
230	5	1	1	lead	Slow: Draw	OUT	2
231	5	1	2	lead	Fast: Take-out	OUT	4
232	5	1	3	second	Fast: Take-out	OUT	2
233	5	1	4	second	Fast: Clearing	OUT	3
234	5	1	5	third	Fast: Hit and Roll	OUT	2
235	5	1	6	third	Fast: Hit and Roll	OUT	4
236	5	1	7	fourth	Fast: Take-out	IN	4
237	5	1	8	fourth	Fast: Take-out	IN	4
238	5	2	1	lead	Slow: Guard	OUT	0
239	5	2	2	lead	Fast: Take-out	OUT	0
240	5	2	3	second	Fast: Hit and Roll	OUT	2
241	5	2	4	second	Fast: Hit and Roll	IN	4
242	5	2	5	third	Fast: Hit and Roll	IN	0
243	5	2	6	third	Fast: Hit and Roll	IN	4
244	5	2	7	fourth	Fast: Take-out	OUT	2
245	5	2	8	fourth	Fast: Take-out	IN	4
246	5	3	1	lead	Slow: Guard	OUT	4
247	5	3	2	lead	Slow: Draw	OUT	2
248	5	3	3	second	Fast: Take-out	OUT	3
249	5	3	4	second	Fast: Promotion Take-out	OUT	4
250	5	3	5	third	Slow: Draw	OUT	4
251	5	3	6	third	Fast: Hit and Roll	OUT	4
252	5	3	7	fourth	Fast: Take-out	IN	2
253	5	3	8	fourth	Fast: Take-out	IN	0
254	5	4	1	lead	Slow: Guard	OUT	0
255	5	4	2	lead	Slow: Guard	IN	3
256	5	4	3	second	Slow: Wick	IN	3
257	5	4	4	second	Slow: Draw	OUT	3
258	5	4	5	third	Slow: Draw	IN	0
259	5	4	6	third	Fast: Hit and Roll	OUT	3
260	5	4	7	fourth	Fast: Hit and Roll	OUT	3
261	5	4	8	fourth	Fast: Take-out	OUT	4
262	5	5	1	lead	Slow: Guard	OUT	4
263	5	5	2	lead	Slow: Draw	OUT	0
264	5	5	3	second	Slow: Draw	OUT	0
265	5	5	4	second	Slow: Draw	OUT	3
266	5	5	5	third	Fast: Hit and Roll	IN	3
267	5	5	6	third	Fast: Hit and Roll	IN	4
268	5	5	7	fourth	Slow: Guard	OUT	4
269	5	5	8	fourth	Slow: Guard	OUT	4
270	5	6	1	lead	Slow: Draw	OUT	1
271	5	6	2	lead	Slow: Draw	OUT	1
272	5	6	3	second	Slow: Draw	OUT	3
273	5	6	4	second	Fast: Take-out	OUT	4
274	5	6	5	third	Fast: Take-out	IN	3
275	5	6	6	third	Slow: Draw	OUT	4
276	5	6	7	fourth	Slow: Guard	OUT	4
277	5	6	8	fourth	Slow: Draw	OUT	2
278	5	7	1	lead	Slow: Wick	OUT	4
279	5	7	2	lead	Slow: Draw	OUT	2
280	5	7	3	second	Fast: Take-out	IN	4
281	5	7	4	second	Slow: Draw	OUT	4
282	5	7	5	third	Slow: Draw	OUT	2
283	5	7	6	third	Slow: Draw	IN	0
284	5	7	7	fourth	Slow: Draw	IN	4
285	5	7	8	fourth	Slow: Wick	IN	4
286	5	8	1	lead	Slow: Draw	OUT	2
287	5	8	2	lead	Slow: Draw	OUT	3
288	5	8	3	second	Slow: Draw	OUT	4
289	5	8	4	second	Fast: Clearing	IN	1
290	5	8	5	third	Fast: Take-out	IN	1
291	5	8	6	third	Fast: Take-out	IN	2
292	5	8	7	fourth	Fast: Double Take-out	OUT	2
293	5	8	8	fourth	Fast: Take-out	OUT	4
294	6	1	1	lead	Slow: Draw	OUT	3
295	6	1	2	lead	Slow: Guard	OUT	3
296	6	1	3	second	Fast: Take-out	OUT	4
297	6	1	4	second	Fast: Take-out	OUT	3
298	6	1	5	third	Slow: Draw	OUT	4
299	6	1	6	third	Slow: Draw	OUT	3
300	6	1	7	fourth	Fast: Take-out	IN	4
301	6	1	8	fourth	Fast: Take-out	OUT	2
302	6	2	1	lead	Slow: Guard	OUT	0
303	6	2	2	lead	Slow: Draw	OUT	1
304	6	2	3	second	Fast: Clearing	IN	1
305	6	2	4	second	Fast: Clearing	OUT	4
306	6	2	5	third	Fast: Clearing	OUT	1
307	6	2	6	third	Fast: Clearing	OUT	3
308	6	2	7	fourth	Fast: Double Take-out	IN	3
309	6	2	8	fourth	Fast: Take-out	IN	4
310	6	3	1	lead	Slow: Guard	OUT	3
311	6	3	2	lead	Slow: Draw	OUT	4
312	6	3	3	second	Slow: Guard	IN	4
313	6	3	4	second	Slow: Guard	IN	4
314	6	3	5	third	Slow: Guard	IN	1
315	6	3	6	third	Slow: Draw	IN	2
316	6	3	7	fourth	Slow: Draw	OUT	3
317	6	3	8	fourth	Slow: Draw	OUT	0
318	6	4	1	lead	Slow: Draw	OUT	3
319	6	4	2	lead	Slow: Front	OUT	4
320	6	4	3	second	Slow: Guard	IN	4
321	6	4	4	second	Fast: Clearing	OUT	1
322	6	4	5	third	Fast: Clearing	OUT	0
323	6	4	6	third	Fast: Clearing	OUT	4
324	6	4	7	fourth	Fast: Hit and Roll	OUT	3
325	6	4	8	fourth	Fast: Take-out	OUT	2
326	6	5	1	lead	Slow: Guard	OUT	4
327	6	5	2	lead	Slow: Draw	IN	3
328	6	5	3	second	Slow: Freeze	IN	0
329	6	5	4	second	Fast: Take-out	IN	4
330	6	5	5	third	Fast: Take-out	OUT	0
331	6	5	6	third	Fast: Promotion Take-out	OUT	2
332	6	5	7	fourth	Fast: Promotion Take-out	OUT	4
333	6	5	8	fourth	Fast: Take-out	IN	0
334	6	6	1	lead	Slow: Draw	OUT	2
335	6	6	2	lead	Slow: Draw	IN	3
336	6	6	3	second	Fast: Clearing	OUT	4
337	6	6	4	second	Fast: Clearing	OUT	4
338	6	6	5	third	Fast: Take-out	OUT	4
339	6	6	6	third	Slow: Draw	OUT	2
340	6	6	7	fourth	Slow: Draw	OUT	2
341	6	6	8	fourth	Fast: Promotion Take-out	OUT	0
342	6	7	1	lead	Slow: Guard	OUT	3
343	6	7	2	lead	Slow: Draw	OUT	4
344	6	7	3	second	Fast: Clearing	IN	4
345	6	7	4	second	Fast: Clearing	IN	4
346	6	7	5	third	Fast: Double Take-out	IN	2
347	6	7	6	third	Fast: Promotion Take-out	OUT	0
348	6	7	7	fourth	Fast: Hit and Roll	OUT	3
349	6	7	8	fourth	Fast: Hit and Roll	OUT	0
350	6	8	1	lead	Slow: Draw	OUT	0
351	6	8	2	lead	Slow: Draw	OUT	2
352	6	8	3	second	Fast: Clearing	OUT	4
353	6	8	4	second	Fast: Clearing	OUT	4
354	6	8	5	third	Fast: Clearing	IN	4
355	6	8	6	third	Fast: Clearing	IN	4
356	6	8	7	fourth	Slow: Draw	IN	3
357	7	1	1	lead	Fast: Take-out	OUT	3
358	7	1	2	lead	Fast: Take-out	OUT	3
359	7	1	3	second	Fast: Hit and Roll	IN	3
360	7	1	4	second	Fast: Clearing	OUT	2
361	7	1	5	third	Fast: Clearing	OUT	4
362	7	1	6	third	Fast: Hit and Roll	OUT	3
363	7	1	7	fourth	Fast: Take-out	IN	4
364	7	1	8	fourth	Fast: Take-out	OUT	4
365	7	2	1	lead	Slow: Draw	IN	3
366	7	2	2	lead	Slow: Guard	IN	0
367	7	2	3	second	Fast: Take-out	OUT	4
368	7	2	4	second	Slow: Guard	IN	2
369	7	2	5	third	Fast: Hit and Roll	IN	4
370	7	2	6	third	Fast: Promotion Take-out	OUT	1
371	7	2	7	fourth	Slow: Draw	IN	1
372	7	2	8	fourth	Slow: Raise	OUT	3
373	7	3	1	lead	Slow: Guard	OUT	4
374	7	3	2	lead	Slow: Draw	IN	2
375	7	3	3	second	Fast: Clearing	OUT	2
376	7	3	4	second	Fast: Clearing	OUT	2
377	7	3	5	third	Fast: Promotion Take-out	OUT	3
378	7	3	6	third	Fast: Double Take-out	OUT	2
379	7	3	7	fourth	Fast: Promotion Take-out	OUT	1
380	7	3	8	fourth	Slow: Raise	IN	2
381	7	4	1	lead	Slow: Guard	OUT	3
382	7	4	2	lead	Slow: Guard	OUT	4
383	7	4	3	second	Fast: Hit and Roll	OUT	3
384	7	4	4	second	Slow: Freeze	OUT	0
385	7	4	5	third	Fast: Promotion Take-out	OUT	2
386	7	4	6	third	Fast: Double Take-out	IN	3
387	7	4	7	fourth	Fast: Take-out	OUT	2
388	7	4	8	fourth	Slow: Draw	IN	4
389	7	5	1	lead	Slow: Guard	IN	0
390	7	5	2	lead	Slow: Draw	OUT	1
391	7	5	3	second	Slow: Draw	OUT	4
392	7	5	4	second	Slow: Draw	OUT	2
393	7	5	5	third	Fast: Take-out	OUT	0
394	7	5	6	third	Fast: Promotion Take-out	OUT	2
395	7	5	7	fourth	Fast: Double Take-out	OUT	2
396	7	5	8	fourth	Fast: Hit and Roll	OUT	2
397	7	6	1	lead	Slow: Guard	IN	4
398	7	6	2	lead	Slow: Draw	IN	1
399	7	6	3	second	Slow: Draw	IN	2
400	7	6	4	second	Fast: Hit and Roll	IN	2
401	7	6	5	third	Slow: Freeze	IN	2
402	7	6	6	third	Slow: Freeze	OUT	2
403	7	6	7	fourth	Slow: Raise	OUT	0
404	7	6	8	fourth	Fast: Promotion Take-out	OUT	2
405	7	7	1	lead	Slow: Guard	IN	4
406	7	7	2	lead	Slow: Freeze	OUT	4
407	7	7	3	second	Slow: Freeze	IN	0
408	7	7	4	second	Slow: Draw	IN	1
409	7	7	5	third	Slow: Draw	IN	2
410	7	7	6	third	Slow: Draw	IN	1
411	7	7	7	fourth	Slow: Draw	IN	4
412	7	7	8	fourth	Slow: Draw	OUT	4
413	7	8	1	lead	Slow: Guard	IN	4
414	7	8	2	lead	Slow: Guard	IN	0
415	7	8	3	second	Slow: Guard	IN	4
416	7	8	4	second	Slow: Guard	IN	4
417	7	8	5	third	Slow: Guard	IN	2
418	7	8	6	third	Slow: Guard	IN	4
419	7	8	7	fourth	Slow: Draw	IN	4
420	7	8	8	fourth	Slow: Draw	IN	4
421	8	1	1	lead	Slow: Guard	OUT	4
422	8	1	2	lead	Fast: Hit and Roll	IN	3
423	8	1	3	second	Fast: Hit and Roll	IN	3
424	8	1	4	second	Fast: Take-out	IN	4
425	8	1	5	third	Slow: Draw	OUT	4
426	8	1	6	third	Slow: Draw	OUT	4
427	8	1	7	fourth	Slow: Draw	IN	4
428	8	1	8	fourth	Slow: Draw	IN	4
429	8	2	1	lead	Slow: Draw	OUT	0
430	8	2	2	lead	Slow: Draw	OUT	4
431	8	2	3	second	Slow: Guard	OUT	4
432	8	2	4	second	Slow: Guard	IN	0
433	8	2	5	third	Fast: Take-out	OUT	3
434	8	2	6	third	Slow: Guard	IN	2
435	8	2	7	fourth	Fast: Take-out	IN	0
436	8	2	8	fourth	Fast: Take-out	IN	0
437	8	3	1	lead	Slow: Guard	OUT	4
438	8	3	2	lead	Slow: Draw	OUT	4
439	8	3	3	second	Fast: Hit and Roll	IN	3
440	8	3	4	second	Fast: Hit and Roll	IN	3
441	8	3	5	third	Fast: Hit and Roll	OUT	4
442	8	3	6	third	Fast: Double Take-out	OUT	3
443	8	3	7	fourth	Fast: Take-out	OUT	2
444	8	3	8	fourth	Fast: Double Take-out	OUT	2
445	8	4	1	lead	Slow: Guard	OUT	3
446	8	4	2	lead	Slow: Draw	OUT	4
447	8	4	3	second	Slow: Freeze	OUT	2
448	8	4	4	second	Fast: Double Take-out	IN	2
449	8	4	5	third	Fast: Take-out	OUT	4
450	8	4	6	third	Slow: Freeze	OUT	4
451	8	4	7	fourth	Slow: Guard	OUT	4
452	8	4	8	fourth	Slow: Freeze	OUT	3
453	8	5	1	lead	Slow: Guard	IN	4
454	8	5	2	lead	Slow: Draw	IN	3
455	8	5	3	second	Fast: Hit and Roll	OUT	2
456	8	5	4	second	Fast: Double Take-out	OUT	4
457	8	5	5	third	Fast: Double Take-out	IN	4
458	8	5	6	third	Fast: Take-out	IN	2
459	8	5	7	fourth	Slow: Draw	OUT	4
460	8	5	8	fourth	Fast: Take-out	IN	4
461	8	6	1	lead	Slow: Guard	OUT	3
462	8	6	2	lead	Slow: Guard	OUT	3
463	8	6	3	second	Slow: Draw	IN	4
464	8	6	4	second	Slow: Draw	IN	2
465	8	6	5	third	Slow: Draw	IN	1
466	8	6	6	third	Slow: Draw	IN	2
467	8	6	7	fourth	Slow: Draw	IN	1
468	8	6	8	fourth	Fast: Hit and Roll	IN	0
469	8	7	1	lead	Slow: Guard	OUT	4
470	8	7	2	lead	Slow: Draw	OUT	2
471	8	7	3	second	Fast: Take-out	IN	4
472	8	7	4	second	Fast: Take-out	OUT	2
473	8	7	5	third	Fast: Double Take-out	OUT	4
474	8	7	6	third	Slow: Draw	OUT	4
475	8	7	7	fourth	Fast: Take-out	OUT	4
476	8	7	8	fourth	Slow: Draw	OUT	4
477	8	8	1	lead	Slow: Draw	OUT	4
478	8	8	2	lead	Slow: Draw	OUT	4
479	8	8	3	second	Fast: Take-out	OUT	0
480	8	8	4	second	Fast: Clearing	OUT	2
481	8	8	5	third	Fast: Clearing	IN	4
482	8	8	6	third	Fast: Clearing	OUT	4
483	8	8	7	fourth	Fast: Take-out	OUT	4
484	8	8	8	fourth	Fast: Take-out	IN	4
\.


--
-- Data for Name: statistics; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.statistics (game_id, "position", player, games, performance, shot_counts, event, season, played_game) FROM stdin;
1	lead	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")"}	(2.2,10,22,4,9,6,13)	(0,6,2,0,2,10)	WCT Bern	2022-2023	t
1	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")"}	(1.3,10,13,7,8,3,5)	(1,1,2,2,4,10)	WCT Bern	2022-2023	t
1	alternate	luis	\N	\N	\N	WCT Bern	2022-2023	f
1	second	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")"}	(1.9,10,19,4,10,6,9)	(1,3,1,4,1,10)	WCT Bern	2022-2023	t
1	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")"}	(2.2,10,22,5,11,5,11)	(4,1,1,1,3,10)	WCT Bern	2022-2023	t
2	alternate	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")"}	\N	\N	WCT Bern	2023-2024	f
2	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")"}	(2.4285715,14,34,4,15,10,19)	(6,2,1,2,3,14)	WCT Bern	2023-2024	t
2	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")"}	(2.25,16,36,6,20,10,16)	(7,1,1,3,4,16)	WCT Bern	2023-2024	t
2	second	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")"}	(2.1875,16,35,4,11,12,24)	(3,3,7,0,3,16)	WCT Bern	2023-2024	t
2	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")"}	(3.125,16,50,7,18,9,32)	(10,0,4,2,0,16)	WCT Bern	2023-2024	t
3	second	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")","(\\"(2.4375,16,39,6,15,10,24)\\",\\"(8,0,3,1,4,16)\\")"}	(2.4375,16,39,6,15,10,24)	(8,0,3,1,4,16)	WCT Bern	2023-2024	t
3	alternate	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")"}	\N	\N	WCT Bern	2023-2024	f
3	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")","(\\"(2.5,16,40,3,10,13,30)\\",\\"(5,4,3,2,2,16)\\")"}	(2.5,16,40,3,10,13,30)	(5,4,3,2,2,16)	WCT Bern	2023-2024	t
3	third	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")","(\\"(1.8125,16,29,3,2,13,27)\\",\\"(2,2,7,1,4,16)\\")"}	(1.8125,16,29,3,2,13,27)	(2,2,7,1,4,16)	WCT Bern	2023-2024	t
3	fourth	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")","(\\"(2.0625,16,33,5,12,11,21)\\",\\"(5,3,2,0,6,16)\\")"}	(2.0625,16,33,5,12,11,21)	(5,3,2,0,6,16)	WCT Bern	2023-2024	t
4	second	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")","(\\"(2.4375,16,39,6,15,10,24)\\",\\"(8,0,3,1,4,16)\\")","(\\"(2.8125,16,45,3,7,13,38)\\",\\"(7,2,5,1,1,16)\\")"}	(2.8125,16,45,3,7,13,38)	(7,2,5,1,1,16)	WCT Bern	2023-2024	t
4	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")","(\\"(2.3333333,15,35,6,12,9,23)\\",\\"(5,2,4,1,3,15)\\")"}	(2.3333333,15,35,6,12,9,23)	(5,2,4,1,3,15)	WCT Bern	2023-2024	t
4	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")","(\\"(2.5,16,40,3,10,13,30)\\",\\"(5,4,3,2,2,16)\\")","(\\"(2.75,16,44,6,17,10,27)\\",\\"(7,4,2,0,3,16)\\")"}	(2.75,16,44,6,17,10,27)	(7,4,2,0,3,16)	WCT Bern	2023-2024	t
4	alternate	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")","(\\"(1.8125,16,29,3,2,13,27)\\",\\"(2,2,7,1,4,16)\\")"}	\N	\N	WCT Bern	2023-2024	f
4	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")","(\\"(2.0625,16,33,5,12,11,21)\\",\\"(5,3,2,0,6,16)\\")","(\\"(2,16,32,4,5,12,27)\\",\\"(5,1,4,1,5,16)\\")"}	(2,16,32,4,5,12,27)	(5,1,4,1,5,16)	WCT Bern	2023-2024	t
5	second	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")","(\\"(2.4375,16,39,6,15,10,24)\\",\\"(8,0,3,1,4,16)\\")","(\\"(2.8125,16,45,3,7,13,38)\\",\\"(7,2,5,1,1,16)\\")","(\\"(2.9375,16,47,4,12,12,35)\\",\\"(6,6,2,1,1,16)\\")"}	(2.9375,16,47,4,12,12,35)	(6,6,2,1,1,16)	WCT Tallinn	2023/24	t
5	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")","(\\"(2.3333333,15,35,6,12,9,23)\\",\\"(5,2,4,1,3,15)\\")","(\\"(3.1875,16,51,7,22,9,29)\\",\\"(10,1,4,0,1,16)\\")"}	(3.1875,16,51,7,22,9,29)	(10,1,4,0,1,16)	WCT Tallinn	2023/24	t
5	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")","(\\"(2.5,16,40,3,10,13,30)\\",\\"(5,4,3,2,2,16)\\")","(\\"(2.75,16,44,6,17,10,27)\\",\\"(7,4,2,0,3,16)\\")","(\\"(2,16,32,1,3,15,29)\\",\\"(4,2,4,2,4,16)\\")"}	(2,16,32,1,3,15,29)	(4,2,4,2,4,16)	WCT Tallinn	2023/24	t
5	alternate	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")","(\\"(1.8125,16,29,3,2,13,27)\\",\\"(2,2,7,1,4,16)\\")"}	\N	\N	WCT Tallinn	2023/24	f
5	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")","(\\"(2.0625,16,33,5,12,11,21)\\",\\"(5,3,2,0,6,16)\\")","(\\"(2,16,32,4,5,12,27)\\",\\"(5,1,4,1,5,16)\\")","(\\"(2.5,16,40,9,17,7,23)\\",\\"(6,3,3,1,3,16)\\")"}	(2.5,16,40,9,17,7,23)	(6,3,3,1,3,16)	WCT Tallinn	2023/24	t
6	second	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")","(\\"(2.4375,16,39,6,15,10,24)\\",\\"(8,0,3,1,4,16)\\")","(\\"(2.8125,16,45,3,7,13,38)\\",\\"(7,2,5,1,1,16)\\")","(\\"(2.9375,16,47,4,12,12,35)\\",\\"(6,6,2,1,1,16)\\")","(\\"(3.3125,16,53,8,25,8,28)\\",\\"(12,1,0,2,1,16)\\")"}	(3.3125,16,53,8,25,8,28)	(12,1,0,2,1,16)	WCT Tallinn	2023/24	t
6	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")","(\\"(2.3333333,15,35,6,12,9,23)\\",\\"(5,2,4,1,3,15)\\")","(\\"(3.1875,16,51,7,22,9,29)\\",\\"(10,1,4,0,1,16)\\")","(\\"(2.2,15,33,5,14,10,19)\\",\\"(3,5,3,0,4,15)\\")"}	(2.2,15,33,5,14,10,19)	(3,5,3,0,4,15)	WCT Tallinn	2023/24	t
6	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")","(\\"(2.5,16,40,3,10,13,30)\\",\\"(5,4,3,2,2,16)\\")","(\\"(2.75,16,44,6,17,10,27)\\",\\"(7,4,2,0,3,16)\\")","(\\"(2,16,32,1,3,15,29)\\",\\"(4,2,4,2,4,16)\\")","(\\"(2.625,16,42,2,6,14,36)\\",\\"(4,7,2,1,2,16)\\")"}	(2.625,16,42,2,6,14,36)	(4,7,2,1,2,16)	WCT Tallinn	2023/24	t
6	alternate	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")","(\\"(1.8125,16,29,3,2,13,27)\\",\\"(2,2,7,1,4,16)\\")"}	\N	\N	WCT Tallinn	2023/24	f
6	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")","(\\"(2.0625,16,33,5,12,11,21)\\",\\"(5,3,2,0,6,16)\\")","(\\"(2,16,32,4,5,12,27)\\",\\"(5,1,4,1,5,16)\\")","(\\"(2.5,16,40,9,17,7,23)\\",\\"(6,3,3,1,3,16)\\")","(\\"(2.25,16,36,5,13,11,23)\\",\\"(5,2,4,2,3,16)\\")"}	(2.25,16,36,5,13,11,23)	(5,2,4,2,3,16)	WCT Tallinn	2023/24	t
7	second	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")","(\\"(2.4375,16,39,6,15,10,24)\\",\\"(8,0,3,1,4,16)\\")","(\\"(2.8125,16,45,3,7,13,38)\\",\\"(7,2,5,1,1,16)\\")","(\\"(2.9375,16,47,4,12,12,35)\\",\\"(6,6,2,1,1,16)\\")","(\\"(3.3125,16,53,8,25,8,28)\\",\\"(12,1,0,2,1,16)\\")","(\\"(2.3125,16,37,8,18,8,19)\\",\\"(4,2,7,1,2,16)\\")"}	(2.3125,16,37,8,18,8,19)	(4,2,7,1,2,16)	WCT Tallinn	2023/24	t
7	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")","(\\"(2.3333333,15,35,6,12,9,23)\\",\\"(5,2,4,1,3,15)\\")","(\\"(3.1875,16,51,7,22,9,29)\\",\\"(10,1,4,0,1,16)\\")","(\\"(2.2,15,33,5,14,10,19)\\",\\"(3,5,3,0,4,15)\\")","(\\"(2.6875,16,43,7,23,9,20)\\",\\"(7,1,5,2,1,16)\\")"}	(2.6875,16,43,7,23,9,20)	(7,1,5,2,1,16)	WCT Tallinn	2023/24	t
7	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")","(\\"(2.5,16,40,3,10,13,30)\\",\\"(5,4,3,2,2,16)\\")","(\\"(2.75,16,44,6,17,10,27)\\",\\"(7,4,2,0,3,16)\\")","(\\"(2,16,32,1,3,15,29)\\",\\"(4,2,4,2,4,16)\\")","(\\"(2.625,16,42,2,6,14,36)\\",\\"(4,7,2,1,2,16)\\")","(\\"(2.5,16,40,9,18,7,22)\\",\\"(6,4,1,2,3,16)\\")"}	(2.5,16,40,9,18,7,22)	(6,4,1,2,3,16)	WCT Tallinn	2023/24	t
7	alternate	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")","(\\"(1.8125,16,29,3,2,13,27)\\",\\"(2,2,7,1,4,16)\\")"}	\N	\N	WCT Tallinn	2023/24	f
7	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")","(\\"(2.0625,16,33,5,12,11,21)\\",\\"(5,3,2,0,6,16)\\")","(\\"(2,16,32,4,5,12,27)\\",\\"(5,1,4,1,5,16)\\")","(\\"(2.5,16,40,9,17,7,23)\\",\\"(6,3,3,1,3,16)\\")","(\\"(2.25,16,36,5,13,11,23)\\",\\"(5,2,4,2,3,16)\\")","(\\"(2.3125,16,37,7,18,9,19)\\",\\"(3,3,7,2,1,16)\\")"}	(2.3125,16,37,7,18,9,19)	(3,3,7,2,1,16)	WCT Tallinn	2023/24	t
8	second	nico	{"(\\"(2.2,10,22,4,9,6,13)\\",\\"(0,6,2,0,2,10)\\")","(\\"(2.4375,16,39,6,15,10,24)\\",\\"(8,0,3,1,4,16)\\")","(\\"(2.8125,16,45,3,7,13,38)\\",\\"(7,2,5,1,1,16)\\")","(\\"(2.9375,16,47,4,12,12,35)\\",\\"(6,6,2,1,1,16)\\")","(\\"(3.3125,16,53,8,25,8,28)\\",\\"(12,1,0,2,1,16)\\")","(\\"(2.3125,16,37,8,18,8,19)\\",\\"(4,2,7,1,2,16)\\")","(\\"(2.5625,16,41,9,25,7,16)\\",\\"(5,3,6,0,2,16)\\")"}	(2.5625,16,41,9,25,7,16)	(5,3,6,0,2,16)	WCT Tallinn	2023/24	t
8	fourth	sergio	{"(\\"(1.3,10,13,7,8,3,5)\\",\\"(1,1,2,2,4,10)\\")","(\\"(2.4285715,14,34,4,15,10,19)\\",\\"(6,2,1,2,3,14)\\")","(\\"(2.3333333,15,35,6,12,9,23)\\",\\"(5,2,4,1,3,15)\\")","(\\"(3.1875,16,51,7,22,9,29)\\",\\"(10,1,4,0,1,16)\\")","(\\"(2.2,15,33,5,14,10,19)\\",\\"(3,5,3,0,4,15)\\")","(\\"(2.6875,16,43,7,23,9,20)\\",\\"(7,1,5,2,1,16)\\")","(\\"(2.75,16,44,8,17,8,27)\\",\\"(9,1,2,1,3,16)\\")"}	(2.75,16,44,8,17,8,27)	(9,1,2,1,3,16)	WCT Tallinn	2023/24	t
8	lead	luis	{"(\\"(2.25,16,36,6,20,10,16)\\",\\"(7,1,1,3,4,16)\\")","(\\"(2.5,16,40,3,10,13,30)\\",\\"(5,4,3,2,2,16)\\")","(\\"(2.75,16,44,6,17,10,27)\\",\\"(7,4,2,0,3,16)\\")","(\\"(2,16,32,1,3,15,29)\\",\\"(4,2,4,2,4,16)\\")","(\\"(2.625,16,42,2,6,14,36)\\",\\"(4,7,2,1,2,16)\\")","(\\"(2.5,16,40,9,18,7,22)\\",\\"(6,4,1,2,3,16)\\")","(\\"(3.3125,16,53,3,10,13,43)\\",\\"(9,5,1,0,1,16)\\")"}	(3.3125,16,53,3,10,13,43)	(9,5,1,0,1,16)	WCT Tallinn	2023/24	t
8	alternate	edu	{"(\\"(1.9,10,19,4,10,6,9)\\",\\"(1,3,1,4,1,10)\\")","(\\"(2.1875,16,35,4,11,12,24)\\",\\"(3,3,7,0,3,16)\\")","(\\"(1.8125,16,29,3,2,13,27)\\",\\"(2,2,7,1,4,16)\\")"}	\N	\N	WCT Tallinn	2023/24	f
8	third	mikel	{"(\\"(2.2,10,22,5,11,5,11)\\",\\"(4,1,1,1,3,10)\\")","(\\"(3.125,16,50,7,18,9,32)\\",\\"(10,0,4,2,0,16)\\")","(\\"(2.0625,16,33,5,12,11,21)\\",\\"(5,3,2,0,6,16)\\")","(\\"(2,16,32,4,5,12,27)\\",\\"(5,1,4,1,5,16)\\")","(\\"(2.5,16,40,9,17,7,23)\\",\\"(6,3,3,1,3,16)\\")","(\\"(2.25,16,36,5,13,11,23)\\",\\"(5,2,4,2,3,16)\\")","(\\"(2.3125,16,37,7,18,9,19)\\",\\"(3,3,7,2,1,16)\\")","(\\"(3.3125,16,53,6,15,10,38)\\",\\"(10,2,3,1,0,16)\\")"}	(3.3125,16,53,6,15,10,38)	(10,2,3,1,0,16)	WCT Tallinn	2023/24	t
\.


--
-- Data for Name: wcf_events; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.wcf_events (event_id, event_name, year, ends) FROM stdin;
1	wmcc	2023	10
\.


--
-- Data for Name: world_teams; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.world_teams (team_id, team_name) FROM stdin;
\.


--
-- Name: game_details_game_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.game_details_game_id_seq', 9, true);


--
-- Name: gamescores_game_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.gamescores_game_id_seq', 78, true);


--
-- Name: player_lineup_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.player_lineup_id_seq', 45, true);


--
-- Name: shots_table_shot_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shots_table_shot_id_seq', 546, true);


--
-- Name: wcf_events_event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.wcf_events_event_id_seq', 24, true);


--
-- Name: world_teams_team_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.world_teams_team_id_seq', 1, false);


--
-- Name: game_details game_details_event_name_season_opponent_tournament_round_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.game_details
    ADD CONSTRAINT game_details_event_name_season_opponent_tournament_round_key UNIQUE (event_name, season, opponent, tournament_round);


--
-- Name: game_details game_details_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.game_details
    ADD CONSTRAINT game_details_pkey PRIMARY KEY (game_id);


--
-- Name: gamescores gamescores_event_id_session_id_home_team_away_team_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gamescores
    ADD CONSTRAINT gamescores_event_id_session_id_home_team_away_team_key UNIQUE (event_id, session_id, home_team, away_team);


--
-- Name: gamescores gamescores_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gamescores
    ADD CONSTRAINT gamescores_pkey PRIMARY KEY (game_id);


--
-- Name: player_lineup player_lineup_game_id_position_player_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.player_lineup
    ADD CONSTRAINT player_lineup_game_id_position_player_key UNIQUE (game_id, "position", player);


--
-- Name: player_lineup player_lineup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.player_lineup
    ADD CONSTRAINT player_lineup_pkey PRIMARY KEY (id);


--
-- Name: shots_table shots_table_game_id_end_num_throw_in_end_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shots_table
    ADD CONSTRAINT shots_table_game_id_end_num_throw_in_end_key UNIQUE (game_id, end_num, throw_in_end);


--
-- Name: shots_table shots_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shots_table
    ADD CONSTRAINT shots_table_pkey PRIMARY KEY (shot_id);


--
-- Name: statistics statistics_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.statistics
    ADD CONSTRAINT statistics_pkey PRIMARY KEY (game_id, "position", player);


--
-- Name: wcf_events wcf_events_event_name_year_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.wcf_events
    ADD CONSTRAINT wcf_events_event_name_year_key UNIQUE (event_name, year);


--
-- Name: wcf_events wcf_events_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.wcf_events
    ADD CONSTRAINT wcf_events_pkey PRIMARY KEY (event_id);


--
-- Name: world_teams world_teams_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.world_teams
    ADD CONSTRAINT world_teams_pkey PRIMARY KEY (team_id);


--
-- Name: gamescores gamescores_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gamescores
    ADD CONSTRAINT gamescores_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.wcf_events(event_id);


--
-- Name: player_lineup player_lineup_game_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.player_lineup
    ADD CONSTRAINT player_lineup_game_id_fkey FOREIGN KEY (game_id) REFERENCES public.game_details(game_id);


--
-- Name: shots_table shots_table_game_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shots_table
    ADD CONSTRAINT shots_table_game_id_fkey FOREIGN KEY (game_id) REFERENCES public.game_details(game_id);


--
-- PostgreSQL database dump complete
--

